// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "IMInternal.pb.h"
// @@protoc_insertion_point(imports)

@implementation IminternalRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [IminternalRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ImbaseDefineRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface IMSyncAuthInfoReq ()
@property UInt32 latestTime;
@property (strong) NSData* attachData;
@end

@implementation IMSyncAuthInfoReq

- (BOOL) hasLatestTime {
  return !!hasLatestTime_;
}
- (void) setHasLatestTime:(BOOL) value_ {
  hasLatestTime_ = !!value_;
}
@synthesize latestTime;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) value_ {
  hasAttachData_ = !!value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.latestTime = 0;
    self.attachData = [NSData data];
  }
  return self;
}
static IMSyncAuthInfoReq* defaultIMSyncAuthInfoReqInstance = nil;
+ (void) initialize {
  if (self == [IMSyncAuthInfoReq class]) {
    defaultIMSyncAuthInfoReqInstance = [[IMSyncAuthInfoReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMSyncAuthInfoReqInstance;
}
- (instancetype) defaultInstance {
  return defaultIMSyncAuthInfoReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLatestTime) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLatestTime) {
    [output writeUInt32:1 value:self.latestTime];
  }
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLatestTime) {
    size_ += computeUInt32Size(1, self.latestTime);
  }
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMSyncAuthInfoReq*) parseFromData:(NSData*) data {
  return (IMSyncAuthInfoReq*)[[[IMSyncAuthInfoReq builder] mergeFromData:data] build];
}
+ (IMSyncAuthInfoReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMSyncAuthInfoReq*)[[[IMSyncAuthInfoReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMSyncAuthInfoReq*) parseFromInputStream:(NSInputStream*) input {
  return (IMSyncAuthInfoReq*)[[[IMSyncAuthInfoReq builder] mergeFromInputStream:input] build];
}
+ (IMSyncAuthInfoReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMSyncAuthInfoReq*)[[[IMSyncAuthInfoReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMSyncAuthInfoReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMSyncAuthInfoReq*)[[[IMSyncAuthInfoReq builder] mergeFromCodedInputStream:input] build];
}
+ (IMSyncAuthInfoReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMSyncAuthInfoReq*)[[[IMSyncAuthInfoReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMSyncAuthInfoReqBuilder*) builder {
  return [[IMSyncAuthInfoReqBuilder alloc] init];
}
+ (IMSyncAuthInfoReqBuilder*) builderWithPrototype:(IMSyncAuthInfoReq*) prototype {
  return [[IMSyncAuthInfoReq builder] mergeFrom:prototype];
}
- (IMSyncAuthInfoReqBuilder*) builder {
  return [IMSyncAuthInfoReq builder];
}
- (IMSyncAuthInfoReqBuilder*) toBuilder {
  return [IMSyncAuthInfoReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLatestTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latestTime", [NSNumber numberWithInteger:self.latestTime]];
  }
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMSyncAuthInfoReq class]]) {
    return NO;
  }
  IMSyncAuthInfoReq *otherMessage = other;
  return
      self.hasLatestTime == otherMessage.hasLatestTime &&
      (!self.hasLatestTime || self.latestTime == otherMessage.latestTime) &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLatestTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.latestTime] hash];
  }
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMSyncAuthInfoReqBuilder()
@property (strong) IMSyncAuthInfoReq* resultImsyncAuthInfoReq;
@end

@implementation IMSyncAuthInfoReqBuilder
@synthesize resultImsyncAuthInfoReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImsyncAuthInfoReq = [[IMSyncAuthInfoReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImsyncAuthInfoReq;
}
- (IMSyncAuthInfoReqBuilder*) clear {
  self.resultImsyncAuthInfoReq = [[IMSyncAuthInfoReq alloc] init];
  return self;
}
- (IMSyncAuthInfoReqBuilder*) clone {
  return [IMSyncAuthInfoReq builderWithPrototype:resultImsyncAuthInfoReq];
}
- (IMSyncAuthInfoReq*) defaultInstance {
  return [IMSyncAuthInfoReq defaultInstance];
}
- (IMSyncAuthInfoReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMSyncAuthInfoReq*) buildPartial {
  IMSyncAuthInfoReq* returnMe = resultImsyncAuthInfoReq;
  self.resultImsyncAuthInfoReq = nil;
  return returnMe;
}
- (IMSyncAuthInfoReqBuilder*) mergeFrom:(IMSyncAuthInfoReq*) other {
  if (other == [IMSyncAuthInfoReq defaultInstance]) {
    return self;
  }
  if (other.hasLatestTime) {
    [self setLatestTime:other.latestTime];
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMSyncAuthInfoReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMSyncAuthInfoReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLatestTime:[input readUInt32]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasLatestTime {
  return resultImsyncAuthInfoReq.hasLatestTime;
}
- (UInt32) latestTime {
  return resultImsyncAuthInfoReq.latestTime;
}
- (IMSyncAuthInfoReqBuilder*) setLatestTime:(UInt32) value {
  resultImsyncAuthInfoReq.hasLatestTime = YES;
  resultImsyncAuthInfoReq.latestTime = value;
  return self;
}
- (IMSyncAuthInfoReqBuilder*) clearLatestTime {
  resultImsyncAuthInfoReq.hasLatestTime = NO;
  resultImsyncAuthInfoReq.latestTime = 0;
  return self;
}
- (BOOL) hasAttachData {
  return resultImsyncAuthInfoReq.hasAttachData;
}
- (NSData*) attachData {
  return resultImsyncAuthInfoReq.attachData;
}
- (IMSyncAuthInfoReqBuilder*) setAttachData:(NSData*) value {
  resultImsyncAuthInfoReq.hasAttachData = YES;
  resultImsyncAuthInfoReq.attachData = value;
  return self;
}
- (IMSyncAuthInfoReqBuilder*) clearAttachData {
  resultImsyncAuthInfoReq.hasAttachData = NO;
  resultImsyncAuthInfoReq.attachData = [NSData data];
  return self;
}
@end

@interface IMSyncAuthInfoRsp ()
@property UInt32 latestTime;
@property (strong) NSMutableArray * authListArray;
@property (strong) NSData* attachData;
@end

@implementation IMSyncAuthInfoRsp

- (BOOL) hasLatestTime {
  return !!hasLatestTime_;
}
- (void) setHasLatestTime:(BOOL) value_ {
  hasLatestTime_ = !!value_;
}
@synthesize latestTime;
@synthesize authListArray;
@dynamic authList;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) value_ {
  hasAttachData_ = !!value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.latestTime = 0;
    self.attachData = [NSData data];
  }
  return self;
}
static IMSyncAuthInfoRsp* defaultIMSyncAuthInfoRspInstance = nil;
+ (void) initialize {
  if (self == [IMSyncAuthInfoRsp class]) {
    defaultIMSyncAuthInfoRspInstance = [[IMSyncAuthInfoRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMSyncAuthInfoRspInstance;
}
- (instancetype) defaultInstance {
  return defaultIMSyncAuthInfoRspInstance;
}
- (NSArray *)authList {
  return authListArray;
}
- (AuthInfo*)authListAtIndex:(NSUInteger)index {
  return [authListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasLatestTime) {
    return NO;
  }
  __block BOOL isInitauthList = YES;
   [self.authList enumerateObjectsUsingBlock:^(AuthInfo *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitauthList = NO;
      *stop = YES;
    }
  }];
  if (!isInitauthList) return isInitauthList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLatestTime) {
    [output writeUInt32:1 value:self.latestTime];
  }
  [self.authListArray enumerateObjectsUsingBlock:^(AuthInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLatestTime) {
    size_ += computeUInt32Size(1, self.latestTime);
  }
  [self.authListArray enumerateObjectsUsingBlock:^(AuthInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMSyncAuthInfoRsp*) parseFromData:(NSData*) data {
  return (IMSyncAuthInfoRsp*)[[[IMSyncAuthInfoRsp builder] mergeFromData:data] build];
}
+ (IMSyncAuthInfoRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMSyncAuthInfoRsp*)[[[IMSyncAuthInfoRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMSyncAuthInfoRsp*) parseFromInputStream:(NSInputStream*) input {
  return (IMSyncAuthInfoRsp*)[[[IMSyncAuthInfoRsp builder] mergeFromInputStream:input] build];
}
+ (IMSyncAuthInfoRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMSyncAuthInfoRsp*)[[[IMSyncAuthInfoRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMSyncAuthInfoRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMSyncAuthInfoRsp*)[[[IMSyncAuthInfoRsp builder] mergeFromCodedInputStream:input] build];
}
+ (IMSyncAuthInfoRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMSyncAuthInfoRsp*)[[[IMSyncAuthInfoRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMSyncAuthInfoRspBuilder*) builder {
  return [[IMSyncAuthInfoRspBuilder alloc] init];
}
+ (IMSyncAuthInfoRspBuilder*) builderWithPrototype:(IMSyncAuthInfoRsp*) prototype {
  return [[IMSyncAuthInfoRsp builder] mergeFrom:prototype];
}
- (IMSyncAuthInfoRspBuilder*) builder {
  return [IMSyncAuthInfoRsp builder];
}
- (IMSyncAuthInfoRspBuilder*) toBuilder {
  return [IMSyncAuthInfoRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLatestTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latestTime", [NSNumber numberWithInteger:self.latestTime]];
  }
  [self.authListArray enumerateObjectsUsingBlock:^(AuthInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"authList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMSyncAuthInfoRsp class]]) {
    return NO;
  }
  IMSyncAuthInfoRsp *otherMessage = other;
  return
      self.hasLatestTime == otherMessage.hasLatestTime &&
      (!self.hasLatestTime || self.latestTime == otherMessage.latestTime) &&
      [self.authListArray isEqualToArray:otherMessage.authListArray] &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLatestTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.latestTime] hash];
  }
  [self.authListArray enumerateObjectsUsingBlock:^(AuthInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMSyncAuthInfoRspBuilder()
@property (strong) IMSyncAuthInfoRsp* resultImsyncAuthInfoRsp;
@end

@implementation IMSyncAuthInfoRspBuilder
@synthesize resultImsyncAuthInfoRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImsyncAuthInfoRsp = [[IMSyncAuthInfoRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImsyncAuthInfoRsp;
}
- (IMSyncAuthInfoRspBuilder*) clear {
  self.resultImsyncAuthInfoRsp = [[IMSyncAuthInfoRsp alloc] init];
  return self;
}
- (IMSyncAuthInfoRspBuilder*) clone {
  return [IMSyncAuthInfoRsp builderWithPrototype:resultImsyncAuthInfoRsp];
}
- (IMSyncAuthInfoRsp*) defaultInstance {
  return [IMSyncAuthInfoRsp defaultInstance];
}
- (IMSyncAuthInfoRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMSyncAuthInfoRsp*) buildPartial {
  IMSyncAuthInfoRsp* returnMe = resultImsyncAuthInfoRsp;
  self.resultImsyncAuthInfoRsp = nil;
  return returnMe;
}
- (IMSyncAuthInfoRspBuilder*) mergeFrom:(IMSyncAuthInfoRsp*) other {
  if (other == [IMSyncAuthInfoRsp defaultInstance]) {
    return self;
  }
  if (other.hasLatestTime) {
    [self setLatestTime:other.latestTime];
  }
  if (other.authListArray.count > 0) {
    if (resultImsyncAuthInfoRsp.authListArray == nil) {
      resultImsyncAuthInfoRsp.authListArray = [[NSMutableArray alloc] initWithArray:other.authListArray];
    } else {
      [resultImsyncAuthInfoRsp.authListArray addObjectsFromArray:other.authListArray];
    }
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMSyncAuthInfoRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMSyncAuthInfoRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLatestTime:[input readUInt32]];
        break;
      }
      case 18: {
        AuthInfoBuilder* subBuilder = [AuthInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAuthList:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasLatestTime {
  return resultImsyncAuthInfoRsp.hasLatestTime;
}
- (UInt32) latestTime {
  return resultImsyncAuthInfoRsp.latestTime;
}
- (IMSyncAuthInfoRspBuilder*) setLatestTime:(UInt32) value {
  resultImsyncAuthInfoRsp.hasLatestTime = YES;
  resultImsyncAuthInfoRsp.latestTime = value;
  return self;
}
- (IMSyncAuthInfoRspBuilder*) clearLatestTime {
  resultImsyncAuthInfoRsp.hasLatestTime = NO;
  resultImsyncAuthInfoRsp.latestTime = 0;
  return self;
}
- (NSMutableArray *)authList {
  return resultImsyncAuthInfoRsp.authListArray;
}
- (AuthInfo*)authListAtIndex:(NSUInteger)index {
  return [resultImsyncAuthInfoRsp authListAtIndex:index];
}
- (IMSyncAuthInfoRspBuilder *)addAuthList:(AuthInfo*)value {
  if (resultImsyncAuthInfoRsp.authListArray == nil) {
    resultImsyncAuthInfoRsp.authListArray = [[NSMutableArray alloc]init];
  }
  [resultImsyncAuthInfoRsp.authListArray addObject:value];
  return self;
}
- (IMSyncAuthInfoRspBuilder *)setAuthListArray:(NSArray *)array {
  resultImsyncAuthInfoRsp.authListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (IMSyncAuthInfoRspBuilder *)clearAuthList {
  resultImsyncAuthInfoRsp.authListArray = nil;
  return self;
}
- (BOOL) hasAttachData {
  return resultImsyncAuthInfoRsp.hasAttachData;
}
- (NSData*) attachData {
  return resultImsyncAuthInfoRsp.attachData;
}
- (IMSyncAuthInfoRspBuilder*) setAttachData:(NSData*) value {
  resultImsyncAuthInfoRsp.hasAttachData = YES;
  resultImsyncAuthInfoRsp.attachData = value;
  return self;
}
- (IMSyncAuthInfoRspBuilder*) clearAttachData {
  resultImsyncAuthInfoRsp.hasAttachData = NO;
  resultImsyncAuthInfoRsp.attachData = [NSData data];
  return self;
}
@end

@interface IMGetUserIdListByNickNameReq ()
@property (strong) NSMutableArray * nickNameListArray;
@property (strong) NSData* attachData;
@end

@implementation IMGetUserIdListByNickNameReq

@synthesize nickNameListArray;
@dynamic nickNameList;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) value_ {
  hasAttachData_ = !!value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.attachData = [NSData data];
  }
  return self;
}
static IMGetUserIdListByNickNameReq* defaultIMGetUserIdListByNickNameReqInstance = nil;
+ (void) initialize {
  if (self == [IMGetUserIdListByNickNameReq class]) {
    defaultIMGetUserIdListByNickNameReqInstance = [[IMGetUserIdListByNickNameReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMGetUserIdListByNickNameReqInstance;
}
- (instancetype) defaultInstance {
  return defaultIMGetUserIdListByNickNameReqInstance;
}
- (NSArray *)nickNameList {
  return nickNameListArray;
}
- (NSString*)nickNameListAtIndex:(NSUInteger)index {
  return [nickNameListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.nickNameListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:1 value:element];
  }];
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.nickNameListArray.count;
    [self.nickNameListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMGetUserIdListByNickNameReq*) parseFromData:(NSData*) data {
  return (IMGetUserIdListByNickNameReq*)[[[IMGetUserIdListByNickNameReq builder] mergeFromData:data] build];
}
+ (IMGetUserIdListByNickNameReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMGetUserIdListByNickNameReq*)[[[IMGetUserIdListByNickNameReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMGetUserIdListByNickNameReq*) parseFromInputStream:(NSInputStream*) input {
  return (IMGetUserIdListByNickNameReq*)[[[IMGetUserIdListByNickNameReq builder] mergeFromInputStream:input] build];
}
+ (IMGetUserIdListByNickNameReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMGetUserIdListByNickNameReq*)[[[IMGetUserIdListByNickNameReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMGetUserIdListByNickNameReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMGetUserIdListByNickNameReq*)[[[IMGetUserIdListByNickNameReq builder] mergeFromCodedInputStream:input] build];
}
+ (IMGetUserIdListByNickNameReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMGetUserIdListByNickNameReq*)[[[IMGetUserIdListByNickNameReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMGetUserIdListByNickNameReqBuilder*) builder {
  return [[IMGetUserIdListByNickNameReqBuilder alloc] init];
}
+ (IMGetUserIdListByNickNameReqBuilder*) builderWithPrototype:(IMGetUserIdListByNickNameReq*) prototype {
  return [[IMGetUserIdListByNickNameReq builder] mergeFrom:prototype];
}
- (IMGetUserIdListByNickNameReqBuilder*) builder {
  return [IMGetUserIdListByNickNameReq builder];
}
- (IMGetUserIdListByNickNameReqBuilder*) toBuilder {
  return [IMGetUserIdListByNickNameReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.nickNameListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickNameList", obj];
  }];
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMGetUserIdListByNickNameReq class]]) {
    return NO;
  }
  IMGetUserIdListByNickNameReq *otherMessage = other;
  return
      [self.nickNameListArray isEqualToArray:otherMessage.nickNameListArray] &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.nickNameListArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMGetUserIdListByNickNameReqBuilder()
@property (strong) IMGetUserIdListByNickNameReq* resultImgetUserIdListByNickNameReq;
@end

@implementation IMGetUserIdListByNickNameReqBuilder
@synthesize resultImgetUserIdListByNickNameReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImgetUserIdListByNickNameReq = [[IMGetUserIdListByNickNameReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImgetUserIdListByNickNameReq;
}
- (IMGetUserIdListByNickNameReqBuilder*) clear {
  self.resultImgetUserIdListByNickNameReq = [[IMGetUserIdListByNickNameReq alloc] init];
  return self;
}
- (IMGetUserIdListByNickNameReqBuilder*) clone {
  return [IMGetUserIdListByNickNameReq builderWithPrototype:resultImgetUserIdListByNickNameReq];
}
- (IMGetUserIdListByNickNameReq*) defaultInstance {
  return [IMGetUserIdListByNickNameReq defaultInstance];
}
- (IMGetUserIdListByNickNameReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMGetUserIdListByNickNameReq*) buildPartial {
  IMGetUserIdListByNickNameReq* returnMe = resultImgetUserIdListByNickNameReq;
  self.resultImgetUserIdListByNickNameReq = nil;
  return returnMe;
}
- (IMGetUserIdListByNickNameReqBuilder*) mergeFrom:(IMGetUserIdListByNickNameReq*) other {
  if (other == [IMGetUserIdListByNickNameReq defaultInstance]) {
    return self;
  }
  if (other.nickNameListArray.count > 0) {
    if (resultImgetUserIdListByNickNameReq.nickNameListArray == nil) {
      resultImgetUserIdListByNickNameReq.nickNameListArray = [[NSMutableArray alloc] initWithArray:other.nickNameListArray];
    } else {
      [resultImgetUserIdListByNickNameReq.nickNameListArray addObjectsFromArray:other.nickNameListArray];
    }
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMGetUserIdListByNickNameReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMGetUserIdListByNickNameReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addNickNameList:[input readString]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (NSMutableArray *)nickNameList {
  return resultImgetUserIdListByNickNameReq.nickNameListArray;
}
- (NSString*)nickNameListAtIndex:(NSUInteger)index {
  return [resultImgetUserIdListByNickNameReq nickNameListAtIndex:index];
}
- (IMGetUserIdListByNickNameReqBuilder *)addNickNameList:(NSString*)value {
  if (resultImgetUserIdListByNickNameReq.nickNameListArray == nil) {
    resultImgetUserIdListByNickNameReq.nickNameListArray = [[NSMutableArray alloc]init];
  }
  [resultImgetUserIdListByNickNameReq.nickNameListArray addObject:value];
  return self;
}
- (IMGetUserIdListByNickNameReqBuilder *)setNickNameListArray:(NSArray *)array {
  resultImgetUserIdListByNickNameReq.nickNameListArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (IMGetUserIdListByNickNameReqBuilder *)clearNickNameList {
  resultImgetUserIdListByNickNameReq.nickNameListArray = nil;
  return self;
}
- (BOOL) hasAttachData {
  return resultImgetUserIdListByNickNameReq.hasAttachData;
}
- (NSData*) attachData {
  return resultImgetUserIdListByNickNameReq.attachData;
}
- (IMGetUserIdListByNickNameReqBuilder*) setAttachData:(NSData*) value {
  resultImgetUserIdListByNickNameReq.hasAttachData = YES;
  resultImgetUserIdListByNickNameReq.attachData = value;
  return self;
}
- (IMGetUserIdListByNickNameReqBuilder*) clearAttachData {
  resultImgetUserIdListByNickNameReq.hasAttachData = NO;
  resultImgetUserIdListByNickNameReq.attachData = [NSData data];
  return self;
}
@end

@interface IMGetUserIdListByNickNameRsp ()
@property (strong) NSMutableArray * userInfoListArray;
@property (strong) NSData* attachData;
@end

@implementation IMGetUserIdListByNickNameRsp

@synthesize userInfoListArray;
@dynamic userInfoList;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) value_ {
  hasAttachData_ = !!value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.attachData = [NSData data];
  }
  return self;
}
static IMGetUserIdListByNickNameRsp* defaultIMGetUserIdListByNickNameRspInstance = nil;
+ (void) initialize {
  if (self == [IMGetUserIdListByNickNameRsp class]) {
    defaultIMGetUserIdListByNickNameRspInstance = [[IMGetUserIdListByNickNameRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMGetUserIdListByNickNameRspInstance;
}
- (instancetype) defaultInstance {
  return defaultIMGetUserIdListByNickNameRspInstance;
}
- (NSArray *)userInfoList {
  return userInfoListArray;
}
- (UserInfo*)userInfoListAtIndex:(NSUInteger)index {
  return [userInfoListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInituserInfoList = YES;
   [self.userInfoList enumerateObjectsUsingBlock:^(UserInfo *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInituserInfoList = NO;
      *stop = YES;
    }
  }];
  if (!isInituserInfoList) return isInituserInfoList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.userInfoListArray enumerateObjectsUsingBlock:^(UserInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.userInfoListArray enumerateObjectsUsingBlock:^(UserInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMGetUserIdListByNickNameRsp*) parseFromData:(NSData*) data {
  return (IMGetUserIdListByNickNameRsp*)[[[IMGetUserIdListByNickNameRsp builder] mergeFromData:data] build];
}
+ (IMGetUserIdListByNickNameRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMGetUserIdListByNickNameRsp*)[[[IMGetUserIdListByNickNameRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMGetUserIdListByNickNameRsp*) parseFromInputStream:(NSInputStream*) input {
  return (IMGetUserIdListByNickNameRsp*)[[[IMGetUserIdListByNickNameRsp builder] mergeFromInputStream:input] build];
}
+ (IMGetUserIdListByNickNameRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMGetUserIdListByNickNameRsp*)[[[IMGetUserIdListByNickNameRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMGetUserIdListByNickNameRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMGetUserIdListByNickNameRsp*)[[[IMGetUserIdListByNickNameRsp builder] mergeFromCodedInputStream:input] build];
}
+ (IMGetUserIdListByNickNameRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMGetUserIdListByNickNameRsp*)[[[IMGetUserIdListByNickNameRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMGetUserIdListByNickNameRspBuilder*) builder {
  return [[IMGetUserIdListByNickNameRspBuilder alloc] init];
}
+ (IMGetUserIdListByNickNameRspBuilder*) builderWithPrototype:(IMGetUserIdListByNickNameRsp*) prototype {
  return [[IMGetUserIdListByNickNameRsp builder] mergeFrom:prototype];
}
- (IMGetUserIdListByNickNameRspBuilder*) builder {
  return [IMGetUserIdListByNickNameRsp builder];
}
- (IMGetUserIdListByNickNameRspBuilder*) toBuilder {
  return [IMGetUserIdListByNickNameRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.userInfoListArray enumerateObjectsUsingBlock:^(UserInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userInfoList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMGetUserIdListByNickNameRsp class]]) {
    return NO;
  }
  IMGetUserIdListByNickNameRsp *otherMessage = other;
  return
      [self.userInfoListArray isEqualToArray:otherMessage.userInfoListArray] &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.userInfoListArray enumerateObjectsUsingBlock:^(UserInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMGetUserIdListByNickNameRspBuilder()
@property (strong) IMGetUserIdListByNickNameRsp* resultImgetUserIdListByNickNameRsp;
@end

@implementation IMGetUserIdListByNickNameRspBuilder
@synthesize resultImgetUserIdListByNickNameRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImgetUserIdListByNickNameRsp = [[IMGetUserIdListByNickNameRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImgetUserIdListByNickNameRsp;
}
- (IMGetUserIdListByNickNameRspBuilder*) clear {
  self.resultImgetUserIdListByNickNameRsp = [[IMGetUserIdListByNickNameRsp alloc] init];
  return self;
}
- (IMGetUserIdListByNickNameRspBuilder*) clone {
  return [IMGetUserIdListByNickNameRsp builderWithPrototype:resultImgetUserIdListByNickNameRsp];
}
- (IMGetUserIdListByNickNameRsp*) defaultInstance {
  return [IMGetUserIdListByNickNameRsp defaultInstance];
}
- (IMGetUserIdListByNickNameRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMGetUserIdListByNickNameRsp*) buildPartial {
  IMGetUserIdListByNickNameRsp* returnMe = resultImgetUserIdListByNickNameRsp;
  self.resultImgetUserIdListByNickNameRsp = nil;
  return returnMe;
}
- (IMGetUserIdListByNickNameRspBuilder*) mergeFrom:(IMGetUserIdListByNickNameRsp*) other {
  if (other == [IMGetUserIdListByNickNameRsp defaultInstance]) {
    return self;
  }
  if (other.userInfoListArray.count > 0) {
    if (resultImgetUserIdListByNickNameRsp.userInfoListArray == nil) {
      resultImgetUserIdListByNickNameRsp.userInfoListArray = [[NSMutableArray alloc] initWithArray:other.userInfoListArray];
    } else {
      [resultImgetUserIdListByNickNameRsp.userInfoListArray addObjectsFromArray:other.userInfoListArray];
    }
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMGetUserIdListByNickNameRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMGetUserIdListByNickNameRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        UserInfoBuilder* subBuilder = [UserInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserInfoList:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (NSMutableArray *)userInfoList {
  return resultImgetUserIdListByNickNameRsp.userInfoListArray;
}
- (UserInfo*)userInfoListAtIndex:(NSUInteger)index {
  return [resultImgetUserIdListByNickNameRsp userInfoListAtIndex:index];
}
- (IMGetUserIdListByNickNameRspBuilder *)addUserInfoList:(UserInfo*)value {
  if (resultImgetUserIdListByNickNameRsp.userInfoListArray == nil) {
    resultImgetUserIdListByNickNameRsp.userInfoListArray = [[NSMutableArray alloc]init];
  }
  [resultImgetUserIdListByNickNameRsp.userInfoListArray addObject:value];
  return self;
}
- (IMGetUserIdListByNickNameRspBuilder *)setUserInfoListArray:(NSArray *)array {
  resultImgetUserIdListByNickNameRsp.userInfoListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (IMGetUserIdListByNickNameRspBuilder *)clearUserInfoList {
  resultImgetUserIdListByNickNameRsp.userInfoListArray = nil;
  return self;
}
- (BOOL) hasAttachData {
  return resultImgetUserIdListByNickNameRsp.hasAttachData;
}
- (NSData*) attachData {
  return resultImgetUserIdListByNickNameRsp.attachData;
}
- (IMGetUserIdListByNickNameRspBuilder*) setAttachData:(NSData*) value {
  resultImgetUserIdListByNickNameRsp.hasAttachData = YES;
  resultImgetUserIdListByNickNameRsp.attachData = value;
  return self;
}
- (IMGetUserIdListByNickNameRspBuilder*) clearAttachData {
  resultImgetUserIdListByNickNameRsp.hasAttachData = NO;
  resultImgetUserIdListByNickNameRsp.attachData = [NSData data];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
