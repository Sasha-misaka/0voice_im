// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "IMBaseDefine.pb.h"
// @@protoc_insertion_point(imports)

@implementation ImbaseDefineRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ImbaseDefineRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL ServiceIDIsValidValue(ServiceID value) {
  switch (value) {
    case ServiceIDSidLogin:
    case ServiceIDSidBuddyList:
    case ServiceIDSidMsg:
    case ServiceIDSidGroup:
    case ServiceIDSidFile:
    case ServiceIDSidSwitchService:
    case ServiceIDSidOther:
    case ServiceIDSidInternal:
      return YES;
    default:
      return NO;
  }
}
BOOL LoginCmdIDIsValidValue(LoginCmdID value) {
  switch (value) {
    case LoginCmdIDCidLoginReqMsgserver:
    case LoginCmdIDCidLoginResMsgserver:
    case LoginCmdIDCidLoginReqUserlogin:
    case LoginCmdIDCidLoginResUserlogin:
    case LoginCmdIDCidLoginReqLoginout:
    case LoginCmdIDCidLoginResLoginout:
    case LoginCmdIDCidLoginKickUser:
    case LoginCmdIDCidLoginReqDevicetoken:
    case LoginCmdIDCidLoginResDevicetoken:
    case LoginCmdIDCidLoginReqKickpcclient:
    case LoginCmdIDCidLoginResKickpcclient:
      return YES;
    default:
      return NO;
  }
}
BOOL BuddyListCmdIDIsValidValue(BuddyListCmdID value) {
  switch (value) {
    case BuddyListCmdIDCidBuddyListRecentContactSessionRequest:
    case BuddyListCmdIDCidBuddyListRecentContactSessionResponse:
    case BuddyListCmdIDCidBuddyListStatusNotify:
    case BuddyListCmdIDCidBuddyListUserInfoRequest:
    case BuddyListCmdIDCidBuddyListUserInfoResponse:
    case BuddyListCmdIDCidBuddyListRemoveSessionReq:
    case BuddyListCmdIDCidBuddyListRemoveSessionRes:
    case BuddyListCmdIDCidBuddyListAllUserRequest:
    case BuddyListCmdIDCidBuddyListAllUserResponse:
    case BuddyListCmdIDCidBuddyListUsersStatusRequest:
    case BuddyListCmdIDCidBuddyListUsersStatusResponse:
    case BuddyListCmdIDCidBuddyListChangeAvatarRequest:
    case BuddyListCmdIDCidBuddyListChangeAvatarResponse:
    case BuddyListCmdIDCidBuddyListPcLoginStatusNotify:
    case BuddyListCmdIDCidBuddyListRemoveSessionNotify:
    case BuddyListCmdIDCidBuddyListDepartmentRequest:
    case BuddyListCmdIDCidBuddyListDepartmentResponse:
      return YES;
    default:
      return NO;
  }
}
BOOL MessageCmdIDIsValidValue(MessageCmdID value) {
  switch (value) {
    case MessageCmdIDCidMsgData:
    case MessageCmdIDCidMsgDataAck:
    case MessageCmdIDCidMsgReadAck:
    case MessageCmdIDCidMsgReadNotify:
    case MessageCmdIDCidMsgTimeRequest:
    case MessageCmdIDCidMsgTimeResponse:
    case MessageCmdIDCidMsgUnreadCntRequest:
    case MessageCmdIDCidMsgUnreadCntResponse:
    case MessageCmdIDCidMsgListRequest:
    case MessageCmdIDCidMsgListResponse:
    case MessageCmdIDCidMsgGetLatestMsgIdReq:
    case MessageCmdIDCidMsgGetLatestMsgIdRsp:
    case MessageCmdIDCidMsgGetByMsgIdReq:
    case MessageCmdIDCidMsgGetByMsgIdRes:
      return YES;
    default:
      return NO;
  }
}
BOOL GroupCmdIDIsValidValue(GroupCmdID value) {
  switch (value) {
    case GroupCmdIDCidGroupNormalListRequest:
    case GroupCmdIDCidGroupNormalListResponse:
    case GroupCmdIDCidGroupInfoRequest:
    case GroupCmdIDCidGroupInfoResponse:
    case GroupCmdIDCidGroupCreateRequest:
    case GroupCmdIDCidGroupCreateResponse:
    case GroupCmdIDCidGroupChangeMemberRequest:
    case GroupCmdIDCidGroupChangeMemberResponse:
    case GroupCmdIDCidGroupShieldGroupRequest:
    case GroupCmdIDCidGroupShieldGroupResponse:
    case GroupCmdIDCidGroupChangeMemberNotify:
      return YES;
    default:
      return NO;
  }
}
BOOL FileCmdIDIsValidValue(FileCmdID value) {
  switch (value) {
    case FileCmdIDCidFileLoginReq:
    case FileCmdIDCidFileLoginRes:
    case FileCmdIDCidFileState:
    case FileCmdIDCidFilePullDataReq:
    case FileCmdIDCidFilePullDataRsp:
    case FileCmdIDCidFileRequest:
    case FileCmdIDCidFileResponse:
    case FileCmdIDCidFileNotify:
    case FileCmdIDCidFileHasOfflineReq:
    case FileCmdIDCidFileHasOfflineRes:
    case FileCmdIDCidFileAddOfflineReq:
    case FileCmdIDCidFileDelOfflineReq:
      return YES;
    default:
      return NO;
  }
}
BOOL SwitchServiceCmdIDIsValidValue(SwitchServiceCmdID value) {
  switch (value) {
    case SwitchServiceCmdIDCidSwitchP2PCmd:
      return YES;
    default:
      return NO;
  }
}
BOOL OtherCmdIDIsValidValue(OtherCmdID value) {
  switch (value) {
    case OtherCmdIDCidOtherHeartbeat:
    case OtherCmdIDCidOtherStopRecvPacket:
    case OtherCmdIDCidOtherValidateReq:
    case OtherCmdIDCidOtherValidateRsp:
    case OtherCmdIDCidOtherGetDeviceTokenReq:
    case OtherCmdIDCidOtherGetDeviceTokenRsp:
    case OtherCmdIDCidOtherRoleSet:
    case OtherCmdIDCidOtherOnlineUserInfo:
    case OtherCmdIDCidOtherMsgServInfo:
    case OtherCmdIDCidOtherUserStatusUpdate:
    case OtherCmdIDCidOtherUserCntUpdate:
    case OtherCmdIDCidOtherServerKickUser:
    case OtherCmdIDCidOtherLoginStatusNotify:
    case OtherCmdIDCidOtherPushToUserReq:
    case OtherCmdIDCidOtherPushToUserRsp:
    case OtherCmdIDCidOtherGetShieldReq:
    case OtherCmdIDCidOtherGetShieldRsp:
    case OtherCmdIDCidOtherFileTransferReq:
    case OtherCmdIDCidOtherFileTransferRsp:
    case OtherCmdIDCidOtherFileServerIpReq:
    case OtherCmdIDCidOtherFileServerIpRsp:
      return YES;
    default:
      return NO;
  }
}
BOOL InternalCmdIDIsValidValue(InternalCmdID value) {
  switch (value) {
    case InternalCmdIDCidInternalSyncAuthInfoReq:
    case InternalCmdIDCidInternalSyncAuthInfoRsp:
    case InternalCmdIDCidInternalUserIdByNickNameReq:
    case InternalCmdIDCidInternalUserIdByNickNameRsp:
      return YES;
    default:
      return NO;
  }
}
BOOL ResultTypeIsValidValue(ResultType value) {
  switch (value) {
    case ResultTypeRefuseReasonNone:
    case ResultTypeRefuseReasonNoMsgServer:
    case ResultTypeRefuseReasonMsgServerFull:
    case ResultTypeRefuseReasonNoDbServer:
    case ResultTypeRefuseReasonNoLoginServer:
    case ResultTypeRefuseReasonNoRouteServer:
    case ResultTypeRefuseReasonDbValidateFailed:
    case ResultTypeRefuseReasonVersionTooOld:
      return YES;
    default:
      return NO;
  }
}
BOOL KickReasonTypeIsValidValue(KickReasonType value) {
  switch (value) {
    case KickReasonTypeKickReasonDuplicateUser:
    case KickReasonTypeKickReasonMobileKick:
      return YES;
    default:
      return NO;
  }
}
BOOL OnlineListTypeIsValidValue(OnlineListType value) {
  switch (value) {
    case OnlineListTypeOnlineListTypeFriendList:
      return YES;
    default:
      return NO;
  }
}
BOOL UserStatTypeIsValidValue(UserStatType value) {
  switch (value) {
    case UserStatTypeUserStatusOnline:
    case UserStatTypeUserStatusOffline:
    case UserStatTypeUserStatusLeave:
      return YES;
    default:
      return NO;
  }
}
BOOL SessionTypeIsValidValue(SessionType value) {
  switch (value) {
    case SessionTypeSessionTypeSingle:
    case SessionTypeSessionTypeGroup:
      return YES;
    default:
      return NO;
  }
}
BOOL MsgTypeIsValidValue(MsgType value) {
  switch (value) {
    case MsgTypeMsgTypeSingleText:
    case MsgTypeMsgTypeSingleAudio:
    case MsgTypeMsgTypeGroupText:
    case MsgTypeMsgTypeGroupAudio:
      return YES;
    default:
      return NO;
  }
}
BOOL ClientTypeIsValidValue(ClientType value) {
  switch (value) {
    case ClientTypeClientTypeWindows:
    case ClientTypeClientTypeMac:
    case ClientTypeClientTypeIos:
    case ClientTypeClientTypeAndroid:
      return YES;
    default:
      return NO;
  }
}
BOOL GroupTypeIsValidValue(GroupType value) {
  switch (value) {
    case GroupTypeGroupTypeNormal:
    case GroupTypeGroupTypeTmp:
      return YES;
    default:
      return NO;
  }
}
BOOL GroupModifyTypeIsValidValue(GroupModifyType value) {
  switch (value) {
    case GroupModifyTypeGroupModifyTypeAdd:
    case GroupModifyTypeGroupModifyTypeDel:
      return YES;
    default:
      return NO;
  }
}
BOOL FileTypeIsValidValue(PBFileType value) {
  switch (value) {
    case FileTypeFileTypeOnline:
    case FileTypeFileTypeOffline:
      return YES;
    default:
      return NO;
  }
}
BOOL ClientFileStateIsValidValue(ClientFileState value) {
  switch (value) {
    case ClientFileStateClientFilePeerReady:
    case ClientFileStateClientFileCancel:
    case ClientFileStateClientFileRefuse:
    case ClientFileStateClientFileDone:
      return YES;
    default:
      return NO;
  }
}
BOOL ClientFileRoleIsValidValue(ClientFileRole value) {
  switch (value) {
    case ClientFileRoleClientRealtimeSender:
    case ClientFileRoleClientRealtimeRecver:
    case ClientFileRoleClientOfflineUpload:
    case ClientFileRoleClientOfflineDownload:
      return YES;
    default:
      return NO;
  }
}
BOOL FileServerErrorIsValidValue(FileServerError value) {
  switch (value) {
    case FileServerErrorFileServerErrnoOk:
    case FileServerErrorFileServerErrnoCreateTaskIdError:
    case FileServerErrorFileServerErrnoCreateTaskError:
    case FileServerErrorFileServerErrnoLoginInvalidToken:
    case FileServerErrorFileServerErrnoInvalidUserForTask:
    case FileServerErrorFileServerErrnoPullDataWithInvalidTaskId:
    case FileServerErrorFileServerErrnoPullDataIllieageUser:
    case FileServerErrorFileServerErrnoPullDataMkdirError:
    case FileServerErrorFileServerErrnoPullDataOpenFileError:
    case FileServerErrorFileServerErrnoPullDataReadFileHeaderError:
    case FileServerErrorFileServerErrnoPullDataAllocMemError:
    case FileServerErrorFileServerErrnoPullDataSeekOffsetError:
    case FileServerErrorFileServerErrnoPullDataFinished:
      return YES;
    default:
      return NO;
  }
}
BOOL SessionStatusTypeIsValidValue(SessionStatusType value) {
  switch (value) {
    case SessionStatusTypeSessionStatusOk:
    case SessionStatusTypeSessionStatusDelete:
      return YES;
    default:
      return NO;
  }
}
BOOL DepartmentStatusTypeIsValidValue(DepartmentStatusType value) {
  switch (value) {
    case DepartmentStatusTypeDeptStatusOk:
    case DepartmentStatusTypeDeptStatusDelete:
      return YES;
    default:
      return NO;
  }
}
@interface IpAddr ()
@property (strong) NSString* ip;
@property UInt32 port;
@end

@implementation IpAddr

- (BOOL) hasIp {
  return !!hasIp_;
}
- (void) setHasIp:(BOOL) value_ {
  hasIp_ = !!value_;
}
@synthesize ip;
- (BOOL) hasPort {
  return !!hasPort_;
}
- (void) setHasPort:(BOOL) value_ {
  hasPort_ = !!value_;
}
@synthesize port;
- (void) dealloc {
  self.ip = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.ip = @"";
    self.port = 0;
  }
  return self;
}
static IpAddr* defaultIpAddrInstance = nil;
+ (void) initialize {
  if (self == [IpAddr class]) {
    defaultIpAddrInstance = [[IpAddr alloc] init];
  }
}
+ (IpAddr*) defaultInstance {
  return defaultIpAddrInstance;
}
- (IpAddr*) defaultInstance {
  return defaultIpAddrInstance;
}
- (BOOL) isInitialized {
  if (!self.hasIp) {
    return NO;
  }
  if (!self.hasPort) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIp) {
    [output writeString:1 value:self.ip];
  }
  if (self.hasPort) {
    [output writeUInt32:2 value:self.port];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasIp) {
    size_ += computeStringSize(1, self.ip);
  }
  if (self.hasPort) {
    size_ += computeUInt32Size(2, self.port);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IpAddr*) parseFromData:(NSData*) data {
  return (IpAddr*)[[[IpAddr builder] mergeFromData:data] build];
}
+ (IpAddr*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IpAddr*)[[[IpAddr builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IpAddr*) parseFromInputStream:(NSInputStream*) input {
  return (IpAddr*)[[[IpAddr builder] mergeFromInputStream:input] build];
}
+ (IpAddr*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IpAddr*)[[[IpAddr builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IpAddr*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IpAddr*)[[[IpAddr builder] mergeFromCodedInputStream:input] build];
}
+ (IpAddr*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IpAddr*)[[[IpAddr builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IpAddrBuilder*) builder {
  return [[IpAddrBuilder alloc] init];
}
+ (IpAddrBuilder*) builderWithPrototype:(IpAddr*) prototype {
  return [[IpAddr builder] mergeFrom:prototype];
}
- (IpAddrBuilder*) builder {
  return [IpAddr builder];
}
- (IpAddrBuilder*) toBuilder {
  return [IpAddr builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasIp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ip", self.ip];
  }
  if (self.hasPort) {
    [output appendFormat:@"%@%@: %@\n", indent, @"port", [NSNumber numberWithInteger:self.port]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IpAddr class]]) {
    return NO;
  }
  IpAddr *otherMessage = other;
  return
      self.hasIp == otherMessage.hasIp &&
      (!self.hasIp || [self.ip isEqual:otherMessage.ip]) &&
      self.hasPort == otherMessage.hasPort &&
      (!self.hasPort || self.port == otherMessage.port) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasIp) {
    hashCode = hashCode * 31 + [self.ip hash];
  }
  if (self.hasPort) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.port] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IpAddrBuilder()
@property (strong) IpAddr* result;
@end

@implementation IpAddrBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[IpAddr alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (IpAddrBuilder*) clear {
  self.result = [[IpAddr alloc] init];
  return self;
}
- (IpAddrBuilder*) clone {
  return [IpAddr builderWithPrototype:result];
}
- (IpAddr*) defaultInstance {
  return [IpAddr defaultInstance];
}
- (IpAddr*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IpAddr*) buildPartial {
  IpAddr* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (IpAddrBuilder*) mergeFrom:(IpAddr*) other {
  if (other == [IpAddr defaultInstance]) {
    return self;
  }
  if (other.hasIp) {
    [self setIp:other.ip];
  }
  if (other.hasPort) {
    [self setPort:other.port];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IpAddrBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IpAddrBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setIp:[input readString]];
        break;
      }
      case 16: {
        [self setPort:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasIp {
  return result.hasIp;
}
- (NSString*) ip {
  return result.ip;
}
- (IpAddrBuilder*) setIp:(NSString*) value {
  result.hasIp = YES;
  result.ip = value;
  return self;
}
- (IpAddrBuilder*) clearIp {
  result.hasIp = NO;
  result.ip = @"";
  return self;
}
- (BOOL) hasPort {
  return result.hasPort;
}
- (UInt32) port {
  return result.port;
}
- (IpAddrBuilder*) setPort:(UInt32) value {
  result.hasPort = YES;
  result.port = value;
  return self;
}
- (IpAddrBuilder*) clearPort {
  result.hasPort = NO;
  result.port = 0;
  return self;
}
@end

@interface UserInfo ()
@property UInt32 userId;
@property UInt32 userGender;
@property (strong) NSString* userNickName;
@property (strong) NSString* avatarUrl;
@property UInt32 departmentId;
@property (strong) NSString* email;
@property (strong) NSString* userRealName;
@property (strong) NSString* userTel;
@property (strong) NSString* userDomain;
@property UInt32 status;
@end

@implementation UserInfo

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasUserGender {
  return !!hasUserGender_;
}
- (void) setHasUserGender:(BOOL) value_ {
  hasUserGender_ = !!value_;
}
@synthesize userGender;
- (BOOL) hasUserNickName {
  return !!hasUserNickName_;
}
- (void) setHasUserNickName:(BOOL) value_ {
  hasUserNickName_ = !!value_;
}
@synthesize userNickName;
- (BOOL) hasAvatarUrl {
  return !!hasAvatarUrl_;
}
- (void) setHasAvatarUrl:(BOOL) value_ {
  hasAvatarUrl_ = !!value_;
}
@synthesize avatarUrl;
- (BOOL) hasDepartmentId {
  return !!hasDepartmentId_;
}
- (void) setHasDepartmentId:(BOOL) value_ {
  hasDepartmentId_ = !!value_;
}
@synthesize departmentId;
- (BOOL) hasEmail {
  return !!hasEmail_;
}
- (void) setHasEmail:(BOOL) value_ {
  hasEmail_ = !!value_;
}
@synthesize email;
- (BOOL) hasUserRealName {
  return !!hasUserRealName_;
}
- (void) setHasUserRealName:(BOOL) value_ {
  hasUserRealName_ = !!value_;
}
@synthesize userRealName;
- (BOOL) hasUserTel {
  return !!hasUserTel_;
}
- (void) setHasUserTel:(BOOL) value_ {
  hasUserTel_ = !!value_;
}
@synthesize userTel;
- (BOOL) hasUserDomain {
  return !!hasUserDomain_;
}
- (void) setHasUserDomain:(BOOL) value_ {
  hasUserDomain_ = !!value_;
}
@synthesize userDomain;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (void) dealloc {
  self.userNickName = nil;
  self.avatarUrl = nil;
  self.email = nil;
  self.userRealName = nil;
  self.userTel = nil;
  self.userDomain = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.userGender = 0;
    self.userNickName = @"";
    self.avatarUrl = @"";
    self.departmentId = 0;
    self.email = @"";
    self.userRealName = @"";
    self.userTel = @"";
    self.userDomain = @"";
    self.status = 0;
  }
  return self;
}
static UserInfo* defaultUserInfoInstance = nil;
+ (void) initialize {
  if (self == [UserInfo class]) {
    defaultUserInfoInstance = [[UserInfo alloc] init];
  }
}
+ (UserInfo*) defaultInstance {
  return defaultUserInfoInstance;
}
- (UserInfo*) defaultInstance {
  return defaultUserInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasUserGender) {
    return NO;
  }
  if (!self.hasUserNickName) {
    return NO;
  }
  if (!self.hasAvatarUrl) {
    return NO;
  }
  if (!self.hasDepartmentId) {
    return NO;
  }
  if (!self.hasEmail) {
    return NO;
  }
  if (!self.hasUserRealName) {
    return NO;
  }
  if (!self.hasUserTel) {
    return NO;
  }
  if (!self.hasUserDomain) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasUserGender) {
    [output writeUInt32:2 value:self.userGender];
  }
  if (self.hasUserNickName) {
    [output writeString:3 value:self.userNickName];
  }
  if (self.hasAvatarUrl) {
    [output writeString:4 value:self.avatarUrl];
  }
  if (self.hasDepartmentId) {
    [output writeUInt32:5 value:self.departmentId];
  }
  if (self.hasEmail) {
    [output writeString:6 value:self.email];
  }
  if (self.hasUserRealName) {
    [output writeString:7 value:self.userRealName];
  }
  if (self.hasUserTel) {
    [output writeString:8 value:self.userTel];
  }
  if (self.hasUserDomain) {
    [output writeString:9 value:self.userDomain];
  }
  if (self.hasStatus) {
    [output writeUInt32:10 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasUserGender) {
    size_ += computeUInt32Size(2, self.userGender);
  }
  if (self.hasUserNickName) {
    size_ += computeStringSize(3, self.userNickName);
  }
  if (self.hasAvatarUrl) {
    size_ += computeStringSize(4, self.avatarUrl);
  }
  if (self.hasDepartmentId) {
    size_ += computeUInt32Size(5, self.departmentId);
  }
  if (self.hasEmail) {
    size_ += computeStringSize(6, self.email);
  }
  if (self.hasUserRealName) {
    size_ += computeStringSize(7, self.userRealName);
  }
  if (self.hasUserTel) {
    size_ += computeStringSize(8, self.userTel);
  }
  if (self.hasUserDomain) {
    size_ += computeStringSize(9, self.userDomain);
  }
  if (self.hasStatus) {
    size_ += computeUInt32Size(10, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserInfo*) parseFromData:(NSData*) data {
  return (UserInfo*)[[[UserInfo builder] mergeFromData:data] build];
}
+ (UserInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfo*)[[[UserInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserInfo*) parseFromInputStream:(NSInputStream*) input {
  return (UserInfo*)[[[UserInfo builder] mergeFromInputStream:input] build];
}
+ (UserInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfo*)[[[UserInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserInfo*)[[[UserInfo builder] mergeFromCodedInputStream:input] build];
}
+ (UserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfo*)[[[UserInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserInfoBuilder*) builder {
  return [[UserInfoBuilder alloc] init];
}
+ (UserInfoBuilder*) builderWithPrototype:(UserInfo*) prototype {
  return [[UserInfo builder] mergeFrom:prototype];
}
- (UserInfoBuilder*) builder {
  return [UserInfo builder];
}
- (UserInfoBuilder*) toBuilder {
  return [UserInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasUserGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userGender", [NSNumber numberWithInteger:self.userGender]];
  }
  if (self.hasUserNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userNickName", self.userNickName];
  }
  if (self.hasAvatarUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatarUrl", self.avatarUrl];
  }
  if (self.hasDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentId", [NSNumber numberWithInteger:self.departmentId]];
  }
  if (self.hasEmail) {
    [output appendFormat:@"%@%@: %@\n", indent, @"email", self.email];
  }
  if (self.hasUserRealName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userRealName", self.userRealName];
  }
  if (self.hasUserTel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userTel", self.userTel];
  }
  if (self.hasUserDomain) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userDomain", self.userDomain];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserInfo class]]) {
    return NO;
  }
  UserInfo *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasUserGender == otherMessage.hasUserGender &&
      (!self.hasUserGender || self.userGender == otherMessage.userGender) &&
      self.hasUserNickName == otherMessage.hasUserNickName &&
      (!self.hasUserNickName || [self.userNickName isEqual:otherMessage.userNickName]) &&
      self.hasAvatarUrl == otherMessage.hasAvatarUrl &&
      (!self.hasAvatarUrl || [self.avatarUrl isEqual:otherMessage.avatarUrl]) &&
      self.hasDepartmentId == otherMessage.hasDepartmentId &&
      (!self.hasDepartmentId || self.departmentId == otherMessage.departmentId) &&
      self.hasEmail == otherMessage.hasEmail &&
      (!self.hasEmail || [self.email isEqual:otherMessage.email]) &&
      self.hasUserRealName == otherMessage.hasUserRealName &&
      (!self.hasUserRealName || [self.userRealName isEqual:otherMessage.userRealName]) &&
      self.hasUserTel == otherMessage.hasUserTel &&
      (!self.hasUserTel || [self.userTel isEqual:otherMessage.userTel]) &&
      self.hasUserDomain == otherMessage.hasUserDomain &&
      (!self.hasUserDomain || [self.userDomain isEqual:otherMessage.userDomain]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasUserGender) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userGender] hash];
  }
  if (self.hasUserNickName) {
    hashCode = hashCode * 31 + [self.userNickName hash];
  }
  if (self.hasAvatarUrl) {
    hashCode = hashCode * 31 + [self.avatarUrl hash];
  }
  if (self.hasDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.departmentId] hash];
  }
  if (self.hasEmail) {
    hashCode = hashCode * 31 + [self.email hash];
  }
  if (self.hasUserRealName) {
    hashCode = hashCode * 31 + [self.userRealName hash];
  }
  if (self.hasUserTel) {
    hashCode = hashCode * 31 + [self.userTel hash];
  }
  if (self.hasUserDomain) {
    hashCode = hashCode * 31 + [self.userDomain hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.status] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserInfoBuilder()
@property (strong) UserInfo* result;
@end

@implementation UserInfoBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[UserInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserInfoBuilder*) clear {
  self.result = [[UserInfo alloc] init];
  return self;
}
- (UserInfoBuilder*) clone {
  return [UserInfo builderWithPrototype:result];
}
- (UserInfo*) defaultInstance {
  return [UserInfo defaultInstance];
}
- (UserInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserInfo*) buildPartial {
  UserInfo* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UserInfoBuilder*) mergeFrom:(UserInfo*) other {
  if (other == [UserInfo defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserGender) {
    [self setUserGender:other.userGender];
  }
  if (other.hasUserNickName) {
    [self setUserNickName:other.userNickName];
  }
  if (other.hasAvatarUrl) {
    [self setAvatarUrl:other.avatarUrl];
  }
  if (other.hasDepartmentId) {
    [self setDepartmentId:other.departmentId];
  }
  if (other.hasEmail) {
    [self setEmail:other.email];
  }
  if (other.hasUserRealName) {
    [self setUserRealName:other.userRealName];
  }
  if (other.hasUserTel) {
    [self setUserTel:other.userTel];
  }
  if (other.hasUserDomain) {
    [self setUserDomain:other.userDomain];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setUserGender:[input readUInt32]];
        break;
      }
      case 26: {
        [self setUserNickName:[input readString]];
        break;
      }
      case 34: {
        [self setAvatarUrl:[input readString]];
        break;
      }
      case 40: {
        [self setDepartmentId:[input readUInt32]];
        break;
      }
      case 50: {
        [self setEmail:[input readString]];
        break;
      }
      case 58: {
        [self setUserRealName:[input readString]];
        break;
      }
      case 66: {
        [self setUserTel:[input readString]];
        break;
      }
      case 74: {
        [self setUserDomain:[input readString]];
        break;
      }
      case 80: {
        [self setStatus:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (UInt32) userId {
  return result.userId;
}
- (UserInfoBuilder*) setUserId:(UInt32) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (UserInfoBuilder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasUserGender {
  return result.hasUserGender;
}
- (UInt32) userGender {
  return result.userGender;
}
- (UserInfoBuilder*) setUserGender:(UInt32) value {
  result.hasUserGender = YES;
  result.userGender = value;
  return self;
}
- (UserInfoBuilder*) clearUserGender {
  result.hasUserGender = NO;
  result.userGender = 0;
  return self;
}
- (BOOL) hasUserNickName {
  return result.hasUserNickName;
}
- (NSString*) userNickName {
  return result.userNickName;
}
- (UserInfoBuilder*) setUserNickName:(NSString*) value {
  result.hasUserNickName = YES;
  result.userNickName = value;
  return self;
}
- (UserInfoBuilder*) clearUserNickName {
  result.hasUserNickName = NO;
  result.userNickName = @"";
  return self;
}
- (BOOL) hasAvatarUrl {
  return result.hasAvatarUrl;
}
- (NSString*) avatarUrl {
  return result.avatarUrl;
}
- (UserInfoBuilder*) setAvatarUrl:(NSString*) value {
  result.hasAvatarUrl = YES;
  result.avatarUrl = value;
  return self;
}
- (UserInfoBuilder*) clearAvatarUrl {
  result.hasAvatarUrl = NO;
  result.avatarUrl = @"";
  return self;
}
- (BOOL) hasDepartmentId {
  return result.hasDepartmentId;
}
- (UInt32) departmentId {
  return result.departmentId;
}
- (UserInfoBuilder*) setDepartmentId:(UInt32) value {
  result.hasDepartmentId = YES;
  result.departmentId = value;
  return self;
}
- (UserInfoBuilder*) clearDepartmentId {
  result.hasDepartmentId = NO;
  result.departmentId = 0;
  return self;
}
- (BOOL) hasEmail {
  return result.hasEmail;
}
- (NSString*) email {
  return result.email;
}
- (UserInfoBuilder*) setEmail:(NSString*) value {
  result.hasEmail = YES;
  result.email = value;
  return self;
}
- (UserInfoBuilder*) clearEmail {
  result.hasEmail = NO;
  result.email = @"";
  return self;
}
- (BOOL) hasUserRealName {
  return result.hasUserRealName;
}
- (NSString*) userRealName {
  return result.userRealName;
}
- (UserInfoBuilder*) setUserRealName:(NSString*) value {
  result.hasUserRealName = YES;
  result.userRealName = value;
  return self;
}
- (UserInfoBuilder*) clearUserRealName {
  result.hasUserRealName = NO;
  result.userRealName = @"";
  return self;
}
- (BOOL) hasUserTel {
  return result.hasUserTel;
}
- (NSString*) userTel {
  return result.userTel;
}
- (UserInfoBuilder*) setUserTel:(NSString*) value {
  result.hasUserTel = YES;
  result.userTel = value;
  return self;
}
- (UserInfoBuilder*) clearUserTel {
  result.hasUserTel = NO;
  result.userTel = @"";
  return self;
}
- (BOOL) hasUserDomain {
  return result.hasUserDomain;
}
- (NSString*) userDomain {
  return result.userDomain;
}
- (UserInfoBuilder*) setUserDomain:(NSString*) value {
  result.hasUserDomain = YES;
  result.userDomain = value;
  return self;
}
- (UserInfoBuilder*) clearUserDomain {
  result.hasUserDomain = NO;
  result.userDomain = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (UInt32) status {
  return result.status;
}
- (UserInfoBuilder*) setStatus:(UInt32) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (UserInfoBuilder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
@end

@interface ContactSessionInfo ()
@property UInt32 sessionId;
@property SessionType sessionType;
@property SessionStatusType sessionStatus;
@property UInt32 updatedTime;
@property UInt32 latestMsgId;
@property (strong) NSData* latestMsgData;
@property MsgType latestMsgType;
@property UInt32 latestMsgFromUserId;
@end

@implementation ContactSessionInfo

- (BOOL) hasSessionId {
  return !!hasSessionId_;
}
- (void) setHasSessionId:(BOOL) value_ {
  hasSessionId_ = !!value_;
}
@synthesize sessionId;
- (BOOL) hasSessionType {
  return !!hasSessionType_;
}
- (void) setHasSessionType:(BOOL) value_ {
  hasSessionType_ = !!value_;
}
@synthesize sessionType;
- (BOOL) hasSessionStatus {
  return !!hasSessionStatus_;
}
- (void) setHasSessionStatus:(BOOL) value_ {
  hasSessionStatus_ = !!value_;
}
@synthesize sessionStatus;
- (BOOL) hasUpdatedTime {
  return !!hasUpdatedTime_;
}
- (void) setHasUpdatedTime:(BOOL) value_ {
  hasUpdatedTime_ = !!value_;
}
@synthesize updatedTime;
- (BOOL) hasLatestMsgId {
  return !!hasLatestMsgId_;
}
- (void) setHasLatestMsgId:(BOOL) value_ {
  hasLatestMsgId_ = !!value_;
}
@synthesize latestMsgId;
- (BOOL) hasLatestMsgData {
  return !!hasLatestMsgData_;
}
- (void) setHasLatestMsgData:(BOOL) value_ {
  hasLatestMsgData_ = !!value_;
}
@synthesize latestMsgData;
- (BOOL) hasLatestMsgType {
  return !!hasLatestMsgType_;
}
- (void) setHasLatestMsgType:(BOOL) value_ {
  hasLatestMsgType_ = !!value_;
}
@synthesize latestMsgType;
- (BOOL) hasLatestMsgFromUserId {
  return !!hasLatestMsgFromUserId_;
}
- (void) setHasLatestMsgFromUserId:(BOOL) value_ {
  hasLatestMsgFromUserId_ = !!value_;
}
@synthesize latestMsgFromUserId;
- (void) dealloc {
  self.latestMsgData = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.sessionId = 0;
    self.sessionType = SessionTypeSessionTypeSingle;
    self.sessionStatus = SessionStatusTypeSessionStatusOk;
    self.updatedTime = 0;
    self.latestMsgId = 0;
    self.latestMsgData = [NSData data];
    self.latestMsgType = MsgTypeMsgTypeSingleText;
    self.latestMsgFromUserId = 0;
  }
  return self;
}
static ContactSessionInfo* defaultContactSessionInfoInstance = nil;
+ (void) initialize {
  if (self == [ContactSessionInfo class]) {
    defaultContactSessionInfoInstance = [[ContactSessionInfo alloc] init];
  }
}
+ (ContactSessionInfo*) defaultInstance {
  return defaultContactSessionInfoInstance;
}
- (ContactSessionInfo*) defaultInstance {
  return defaultContactSessionInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSessionId) {
    return NO;
  }
  if (!self.hasSessionType) {
    return NO;
  }
  if (!self.hasSessionStatus) {
    return NO;
  }
  if (!self.hasUpdatedTime) {
    return NO;
  }
  if (!self.hasLatestMsgId) {
    return NO;
  }
  if (!self.hasLatestMsgData) {
    return NO;
  }
  if (!self.hasLatestMsgType) {
    return NO;
  }
  if (!self.hasLatestMsgFromUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSessionId) {
    [output writeUInt32:1 value:self.sessionId];
  }
  if (self.hasSessionType) {
    [output writeEnum:2 value:self.sessionType];
  }
  if (self.hasSessionStatus) {
    [output writeEnum:3 value:self.sessionStatus];
  }
  if (self.hasUpdatedTime) {
    [output writeUInt32:4 value:self.updatedTime];
  }
  if (self.hasLatestMsgId) {
    [output writeUInt32:5 value:self.latestMsgId];
  }
  if (self.hasLatestMsgData) {
    [output writeData:6 value:self.latestMsgData];
  }
  if (self.hasLatestMsgType) {
    [output writeEnum:7 value:self.latestMsgType];
  }
  if (self.hasLatestMsgFromUserId) {
    [output writeUInt32:8 value:self.latestMsgFromUserId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSessionId) {
    size_ += computeUInt32Size(1, self.sessionId);
  }
  if (self.hasSessionType) {
    size_ += computeEnumSize(2, self.sessionType);
  }
  if (self.hasSessionStatus) {
    size_ += computeEnumSize(3, self.sessionStatus);
  }
  if (self.hasUpdatedTime) {
    size_ += computeUInt32Size(4, self.updatedTime);
  }
  if (self.hasLatestMsgId) {
    size_ += computeUInt32Size(5, self.latestMsgId);
  }
  if (self.hasLatestMsgData) {
    size_ += computeDataSize(6, self.latestMsgData);
  }
  if (self.hasLatestMsgType) {
    size_ += computeEnumSize(7, self.latestMsgType);
  }
  if (self.hasLatestMsgFromUserId) {
    size_ += computeUInt32Size(8, self.latestMsgFromUserId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ContactSessionInfo*) parseFromData:(NSData*) data {
  return (ContactSessionInfo*)[[[ContactSessionInfo builder] mergeFromData:data] build];
}
+ (ContactSessionInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactSessionInfo*)[[[ContactSessionInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactSessionInfo*) parseFromInputStream:(NSInputStream*) input {
  return (ContactSessionInfo*)[[[ContactSessionInfo builder] mergeFromInputStream:input] build];
}
+ (ContactSessionInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactSessionInfo*)[[[ContactSessionInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactSessionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContactSessionInfo*)[[[ContactSessionInfo builder] mergeFromCodedInputStream:input] build];
}
+ (ContactSessionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactSessionInfo*)[[[ContactSessionInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactSessionInfoBuilder*) builder {
  return [[ContactSessionInfoBuilder alloc] init];
}
+ (ContactSessionInfoBuilder*) builderWithPrototype:(ContactSessionInfo*) prototype {
  return [[ContactSessionInfo builder] mergeFrom:prototype];
}
- (ContactSessionInfoBuilder*) builder {
  return [ContactSessionInfo builder];
}
- (ContactSessionInfoBuilder*) toBuilder {
  return [ContactSessionInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSessionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessionId", [NSNumber numberWithInteger:self.sessionId]];
  }
  if (self.hasSessionType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"sessionType", self.sessionType];
  }
  if (self.hasSessionStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"sessionStatus", self.sessionStatus];
  }
  if (self.hasUpdatedTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updatedTime", [NSNumber numberWithInteger:self.updatedTime]];
  }
  if (self.hasLatestMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latestMsgId", [NSNumber numberWithInteger:self.latestMsgId]];
  }
  if (self.hasLatestMsgData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latestMsgData", self.latestMsgData];
  }
  if (self.hasLatestMsgType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"latestMsgType", self.latestMsgType];
  }
  if (self.hasLatestMsgFromUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latestMsgFromUserId", [NSNumber numberWithInteger:self.latestMsgFromUserId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ContactSessionInfo class]]) {
    return NO;
  }
  ContactSessionInfo *otherMessage = other;
  return
      self.hasSessionId == otherMessage.hasSessionId &&
      (!self.hasSessionId || self.sessionId == otherMessage.sessionId) &&
      self.hasSessionType == otherMessage.hasSessionType &&
      (!self.hasSessionType || self.sessionType == otherMessage.sessionType) &&
      self.hasSessionStatus == otherMessage.hasSessionStatus &&
      (!self.hasSessionStatus || self.sessionStatus == otherMessage.sessionStatus) &&
      self.hasUpdatedTime == otherMessage.hasUpdatedTime &&
      (!self.hasUpdatedTime || self.updatedTime == otherMessage.updatedTime) &&
      self.hasLatestMsgId == otherMessage.hasLatestMsgId &&
      (!self.hasLatestMsgId || self.latestMsgId == otherMessage.latestMsgId) &&
      self.hasLatestMsgData == otherMessage.hasLatestMsgData &&
      (!self.hasLatestMsgData || [self.latestMsgData isEqual:otherMessage.latestMsgData]) &&
      self.hasLatestMsgType == otherMessage.hasLatestMsgType &&
      (!self.hasLatestMsgType || self.latestMsgType == otherMessage.latestMsgType) &&
      self.hasLatestMsgFromUserId == otherMessage.hasLatestMsgFromUserId &&
      (!self.hasLatestMsgFromUserId || self.latestMsgFromUserId == otherMessage.latestMsgFromUserId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSessionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sessionId] hash];
  }
  if (self.hasSessionType) {
    hashCode = hashCode * 31 + self.sessionType;
  }
  if (self.hasSessionStatus) {
    hashCode = hashCode * 31 + self.sessionStatus;
  }
  if (self.hasUpdatedTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updatedTime] hash];
  }
  if (self.hasLatestMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.latestMsgId] hash];
  }
  if (self.hasLatestMsgData) {
    hashCode = hashCode * 31 + [self.latestMsgData hash];
  }
  if (self.hasLatestMsgType) {
    hashCode = hashCode * 31 + self.latestMsgType;
  }
  if (self.hasLatestMsgFromUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.latestMsgFromUserId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ContactSessionInfoBuilder()
@property (strong) ContactSessionInfo* result;
@end

@implementation ContactSessionInfoBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[ContactSessionInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactSessionInfoBuilder*) clear {
  self.result = [[ContactSessionInfo alloc] init];
  return self;
}
- (ContactSessionInfoBuilder*) clone {
  return [ContactSessionInfo builderWithPrototype:result];
}
- (ContactSessionInfo*) defaultInstance {
  return [ContactSessionInfo defaultInstance];
}
- (ContactSessionInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactSessionInfo*) buildPartial {
  ContactSessionInfo* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ContactSessionInfoBuilder*) mergeFrom:(ContactSessionInfo*) other {
  if (other == [ContactSessionInfo defaultInstance]) {
    return self;
  }
  if (other.hasSessionId) {
    [self setSessionId:other.sessionId];
  }
  if (other.hasSessionType) {
    [self setSessionType:other.sessionType];
  }
  if (other.hasSessionStatus) {
    [self setSessionStatus:other.sessionStatus];
  }
  if (other.hasUpdatedTime) {
    [self setUpdatedTime:other.updatedTime];
  }
  if (other.hasLatestMsgId) {
    [self setLatestMsgId:other.latestMsgId];
  }
  if (other.hasLatestMsgData) {
    [self setLatestMsgData:other.latestMsgData];
  }
  if (other.hasLatestMsgType) {
    [self setLatestMsgType:other.latestMsgType];
  }
  if (other.hasLatestMsgFromUserId) {
    [self setLatestMsgFromUserId:other.latestMsgFromUserId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactSessionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContactSessionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSessionId:[input readUInt32]];
        break;
      }
      case 16: {
        SessionType value = (SessionType)[input readEnum];
        if (SessionTypeIsValidValue(value)) {
          [self setSessionType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        SessionStatusType value = (SessionStatusType)[input readEnum];
        if (SessionStatusTypeIsValidValue(value)) {
          [self setSessionStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setUpdatedTime:[input readUInt32]];
        break;
      }
      case 40: {
        [self setLatestMsgId:[input readUInt32]];
        break;
      }
      case 50: {
        [self setLatestMsgData:[input readData]];
        break;
      }
      case 56: {
        MsgType value = (MsgType)[input readEnum];
        if (MsgTypeIsValidValue(value)) {
          [self setLatestMsgType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 64: {
        [self setLatestMsgFromUserId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSessionId {
  return result.hasSessionId;
}
- (UInt32) sessionId {
  return result.sessionId;
}
- (ContactSessionInfoBuilder*) setSessionId:(UInt32) value {
  result.hasSessionId = YES;
  result.sessionId = value;
  return self;
}
- (ContactSessionInfoBuilder*) clearSessionId {
  result.hasSessionId = NO;
  result.sessionId = 0;
  return self;
}
- (BOOL) hasSessionType {
  return result.hasSessionType;
}
- (SessionType) sessionType {
  return result.sessionType;
}
- (ContactSessionInfoBuilder*) setSessionType:(SessionType) value {
  result.hasSessionType = YES;
  result.sessionType = value;
  return self;
}
- (ContactSessionInfoBuilder*) clearSessionType {
  result.hasSessionType = NO;
  result.sessionType = SessionTypeSessionTypeSingle;
  return self;
}
- (BOOL) hasSessionStatus {
  return result.hasSessionStatus;
}
- (SessionStatusType) sessionStatus {
  return result.sessionStatus;
}
- (ContactSessionInfoBuilder*) setSessionStatus:(SessionStatusType) value {
  result.hasSessionStatus = YES;
  result.sessionStatus = value;
  return self;
}
- (ContactSessionInfoBuilder*) clearSessionStatus {
  result.hasSessionStatus = NO;
  result.sessionStatus = SessionStatusTypeSessionStatusOk;
  return self;
}
- (BOOL) hasUpdatedTime {
  return result.hasUpdatedTime;
}
- (UInt32) updatedTime {
  return result.updatedTime;
}
- (ContactSessionInfoBuilder*) setUpdatedTime:(UInt32) value {
  result.hasUpdatedTime = YES;
  result.updatedTime = value;
  return self;
}
- (ContactSessionInfoBuilder*) clearUpdatedTime {
  result.hasUpdatedTime = NO;
  result.updatedTime = 0;
  return self;
}
- (BOOL) hasLatestMsgId {
  return result.hasLatestMsgId;
}
- (UInt32) latestMsgId {
  return result.latestMsgId;
}
- (ContactSessionInfoBuilder*) setLatestMsgId:(UInt32) value {
  result.hasLatestMsgId = YES;
  result.latestMsgId = value;
  return self;
}
- (ContactSessionInfoBuilder*) clearLatestMsgId {
  result.hasLatestMsgId = NO;
  result.latestMsgId = 0;
  return self;
}
- (BOOL) hasLatestMsgData {
  return result.hasLatestMsgData;
}
- (NSData*) latestMsgData {
  return result.latestMsgData;
}
- (ContactSessionInfoBuilder*) setLatestMsgData:(NSData*) value {
  result.hasLatestMsgData = YES;
  result.latestMsgData = value;
  return self;
}
- (ContactSessionInfoBuilder*) clearLatestMsgData {
  result.hasLatestMsgData = NO;
  result.latestMsgData = [NSData data];
  return self;
}
- (BOOL) hasLatestMsgType {
  return result.hasLatestMsgType;
}
- (MsgType) latestMsgType {
  return result.latestMsgType;
}
- (ContactSessionInfoBuilder*) setLatestMsgType:(MsgType) value {
  result.hasLatestMsgType = YES;
  result.latestMsgType = value;
  return self;
}
- (ContactSessionInfoBuilder*) clearLatestMsgType {
  result.hasLatestMsgType = NO;
  result.latestMsgType = MsgTypeMsgTypeSingleText;
  return self;
}
- (BOOL) hasLatestMsgFromUserId {
  return result.hasLatestMsgFromUserId;
}
- (UInt32) latestMsgFromUserId {
  return result.latestMsgFromUserId;
}
- (ContactSessionInfoBuilder*) setLatestMsgFromUserId:(UInt32) value {
  result.hasLatestMsgFromUserId = YES;
  result.latestMsgFromUserId = value;
  return self;
}
- (ContactSessionInfoBuilder*) clearLatestMsgFromUserId {
  result.hasLatestMsgFromUserId = NO;
  result.latestMsgFromUserId = 0;
  return self;
}
@end

@interface UserStat ()
@property UInt32 userId;
@property UserStatType status;
@end

@implementation UserStat

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.status = UserStatTypeUserStatusOnline;
  }
  return self;
}
static UserStat* defaultUserStatInstance = nil;
+ (void) initialize {
  if (self == [UserStat class]) {
    defaultUserStatInstance = [[UserStat alloc] init];
  }
}
+ (UserStat*) defaultInstance {
  return defaultUserStatInstance;
}
- (UserStat*) defaultInstance {
  return defaultUserStatInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserStat*) parseFromData:(NSData*) data {
  return (UserStat*)[[[UserStat builder] mergeFromData:data] build];
}
+ (UserStat*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserStat*)[[[UserStat builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserStat*) parseFromInputStream:(NSInputStream*) input {
  return (UserStat*)[[[UserStat builder] mergeFromInputStream:input] build];
}
+ (UserStat*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserStat*)[[[UserStat builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserStat*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserStat*)[[[UserStat builder] mergeFromCodedInputStream:input] build];
}
+ (UserStat*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserStat*)[[[UserStat builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserStatBuilder*) builder {
  return [[UserStatBuilder alloc] init];
}
+ (UserStatBuilder*) builderWithPrototype:(UserStat*) prototype {
  return [[UserStat builder] mergeFrom:prototype];
}
- (UserStatBuilder*) builder {
  return [UserStat builder];
}
- (UserStatBuilder*) toBuilder {
  return [UserStat builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserStat class]]) {
    return NO;
  }
  UserStat *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserStatBuilder()
@property (strong) UserStat* result;
@end

@implementation UserStatBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[UserStat alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserStatBuilder*) clear {
  self.result = [[UserStat alloc] init];
  return self;
}
- (UserStatBuilder*) clone {
  return [UserStat builderWithPrototype:result];
}
- (UserStat*) defaultInstance {
  return [UserStat defaultInstance];
}
- (UserStat*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserStat*) buildPartial {
  UserStat* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UserStatBuilder*) mergeFrom:(UserStat*) other {
  if (other == [UserStat defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserStatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserStatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        UserStatType value = (UserStatType)[input readEnum];
        if (UserStatTypeIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (UInt32) userId {
  return result.userId;
}
- (UserStatBuilder*) setUserId:(UInt32) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (UserStatBuilder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (UserStatType) status {
  return result.status;
}
- (UserStatBuilder*) setStatus:(UserStatType) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (UserStatBuilder*) clearStatus {
  result.hasStatus = NO;
  result.status = UserStatTypeUserStatusOnline;
  return self;
}
@end

@interface ServerUserStat ()
@property UInt32 userId;
@property UserStatType status;
@property ClientType clientType;
@end

@implementation ServerUserStat

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasClientType {
  return !!hasClientType_;
}
- (void) setHasClientType:(BOOL) value_ {
  hasClientType_ = !!value_;
}
@synthesize clientType;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.status = UserStatTypeUserStatusOnline;
    self.clientType = ClientTypeClientTypeWindows;
  }
  return self;
}
static ServerUserStat* defaultServerUserStatInstance = nil;
+ (void) initialize {
  if (self == [ServerUserStat class]) {
    defaultServerUserStatInstance = [[ServerUserStat alloc] init];
  }
}
+ (ServerUserStat*) defaultInstance {
  return defaultServerUserStatInstance;
}
- (ServerUserStat*) defaultInstance {
  return defaultServerUserStatInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasClientType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasClientType) {
    [output writeEnum:3 value:self.clientType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasClientType) {
    size_ += computeEnumSize(3, self.clientType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ServerUserStat*) parseFromData:(NSData*) data {
  return (ServerUserStat*)[[[ServerUserStat builder] mergeFromData:data] build];
}
+ (ServerUserStat*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServerUserStat*)[[[ServerUserStat builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ServerUserStat*) parseFromInputStream:(NSInputStream*) input {
  return (ServerUserStat*)[[[ServerUserStat builder] mergeFromInputStream:input] build];
}
+ (ServerUserStat*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServerUserStat*)[[[ServerUserStat builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServerUserStat*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ServerUserStat*)[[[ServerUserStat builder] mergeFromCodedInputStream:input] build];
}
+ (ServerUserStat*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServerUserStat*)[[[ServerUserStat builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServerUserStatBuilder*) builder {
  return [[ServerUserStatBuilder alloc] init];
}
+ (ServerUserStatBuilder*) builderWithPrototype:(ServerUserStat*) prototype {
  return [[ServerUserStat builder] mergeFrom:prototype];
}
- (ServerUserStatBuilder*) builder {
  return [ServerUserStat builder];
}
- (ServerUserStatBuilder*) toBuilder {
  return [ServerUserStat builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  if (self.hasClientType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"clientType", self.clientType];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ServerUserStat class]]) {
    return NO;
  }
  ServerUserStat *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasClientType == otherMessage.hasClientType &&
      (!self.hasClientType || self.clientType == otherMessage.clientType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasClientType) {
    hashCode = hashCode * 31 + self.clientType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ServerUserStatBuilder()
@property (strong) ServerUserStat* result;
@end

@implementation ServerUserStatBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[ServerUserStat alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ServerUserStatBuilder*) clear {
  self.result = [[ServerUserStat alloc] init];
  return self;
}
- (ServerUserStatBuilder*) clone {
  return [ServerUserStat builderWithPrototype:result];
}
- (ServerUserStat*) defaultInstance {
  return [ServerUserStat defaultInstance];
}
- (ServerUserStat*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ServerUserStat*) buildPartial {
  ServerUserStat* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ServerUserStatBuilder*) mergeFrom:(ServerUserStat*) other {
  if (other == [ServerUserStat defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasClientType) {
    [self setClientType:other.clientType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ServerUserStatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ServerUserStatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        UserStatType value = (UserStatType)[input readEnum];
        if (UserStatTypeIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        ClientType value = (ClientType)[input readEnum];
        if (ClientTypeIsValidValue(value)) {
          [self setClientType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (UInt32) userId {
  return result.userId;
}
- (ServerUserStatBuilder*) setUserId:(UInt32) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (ServerUserStatBuilder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (UserStatType) status {
  return result.status;
}
- (ServerUserStatBuilder*) setStatus:(UserStatType) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ServerUserStatBuilder*) clearStatus {
  result.hasStatus = NO;
  result.status = UserStatTypeUserStatusOnline;
  return self;
}
- (BOOL) hasClientType {
  return result.hasClientType;
}
- (ClientType) clientType {
  return result.clientType;
}
- (ServerUserStatBuilder*) setClientType:(ClientType) value {
  result.hasClientType = YES;
  result.clientType = value;
  return self;
}
- (ServerUserStatBuilder*) clearClientType {
  result.hasClientType = NO;
  result.clientType = ClientTypeClientTypeWindows;
  return self;
}
@end

@interface UnreadInfo ()
@property UInt32 sessionId;
@property SessionType sessionType;
@property UInt32 unreadCnt;
@property UInt32 latestMsgId;
@property (strong) NSData* latestMsgData;
@property MsgType latestMsgType;
@property UInt32 latestMsgFromUserId;
@end

@implementation UnreadInfo

- (BOOL) hasSessionId {
  return !!hasSessionId_;
}
- (void) setHasSessionId:(BOOL) value_ {
  hasSessionId_ = !!value_;
}
@synthesize sessionId;
- (BOOL) hasSessionType {
  return !!hasSessionType_;
}
- (void) setHasSessionType:(BOOL) value_ {
  hasSessionType_ = !!value_;
}
@synthesize sessionType;
- (BOOL) hasUnreadCnt {
  return !!hasUnreadCnt_;
}
- (void) setHasUnreadCnt:(BOOL) value_ {
  hasUnreadCnt_ = !!value_;
}
@synthesize unreadCnt;
- (BOOL) hasLatestMsgId {
  return !!hasLatestMsgId_;
}
- (void) setHasLatestMsgId:(BOOL) value_ {
  hasLatestMsgId_ = !!value_;
}
@synthesize latestMsgId;
- (BOOL) hasLatestMsgData {
  return !!hasLatestMsgData_;
}
- (void) setHasLatestMsgData:(BOOL) value_ {
  hasLatestMsgData_ = !!value_;
}
@synthesize latestMsgData;
- (BOOL) hasLatestMsgType {
  return !!hasLatestMsgType_;
}
- (void) setHasLatestMsgType:(BOOL) value_ {
  hasLatestMsgType_ = !!value_;
}
@synthesize latestMsgType;
- (BOOL) hasLatestMsgFromUserId {
  return !!hasLatestMsgFromUserId_;
}
- (void) setHasLatestMsgFromUserId:(BOOL) value_ {
  hasLatestMsgFromUserId_ = !!value_;
}
@synthesize latestMsgFromUserId;
- (void) dealloc {
  self.latestMsgData = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.sessionId = 0;
    self.sessionType = SessionTypeSessionTypeSingle;
    self.unreadCnt = 0;
    self.latestMsgId = 0;
    self.latestMsgData = [NSData data];
    self.latestMsgType = MsgTypeMsgTypeSingleText;
    self.latestMsgFromUserId = 0;
  }
  return self;
}
static UnreadInfo* defaultUnreadInfoInstance = nil;
+ (void) initialize {
  if (self == [UnreadInfo class]) {
    defaultUnreadInfoInstance = [[UnreadInfo alloc] init];
  }
}
+ (UnreadInfo*) defaultInstance {
  return defaultUnreadInfoInstance;
}
- (UnreadInfo*) defaultInstance {
  return defaultUnreadInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSessionId) {
    return NO;
  }
  if (!self.hasSessionType) {
    return NO;
  }
  if (!self.hasUnreadCnt) {
    return NO;
  }
  if (!self.hasLatestMsgId) {
    return NO;
  }
  if (!self.hasLatestMsgData) {
    return NO;
  }
  if (!self.hasLatestMsgType) {
    return NO;
  }
  if (!self.hasLatestMsgFromUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSessionId) {
    [output writeUInt32:1 value:self.sessionId];
  }
  if (self.hasSessionType) {
    [output writeEnum:2 value:self.sessionType];
  }
  if (self.hasUnreadCnt) {
    [output writeUInt32:3 value:self.unreadCnt];
  }
  if (self.hasLatestMsgId) {
    [output writeUInt32:4 value:self.latestMsgId];
  }
  if (self.hasLatestMsgData) {
    [output writeData:5 value:self.latestMsgData];
  }
  if (self.hasLatestMsgType) {
    [output writeEnum:6 value:self.latestMsgType];
  }
  if (self.hasLatestMsgFromUserId) {
    [output writeUInt32:7 value:self.latestMsgFromUserId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSessionId) {
    size_ += computeUInt32Size(1, self.sessionId);
  }
  if (self.hasSessionType) {
    size_ += computeEnumSize(2, self.sessionType);
  }
  if (self.hasUnreadCnt) {
    size_ += computeUInt32Size(3, self.unreadCnt);
  }
  if (self.hasLatestMsgId) {
    size_ += computeUInt32Size(4, self.latestMsgId);
  }
  if (self.hasLatestMsgData) {
    size_ += computeDataSize(5, self.latestMsgData);
  }
  if (self.hasLatestMsgType) {
    size_ += computeEnumSize(6, self.latestMsgType);
  }
  if (self.hasLatestMsgFromUserId) {
    size_ += computeUInt32Size(7, self.latestMsgFromUserId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UnreadInfo*) parseFromData:(NSData*) data {
  return (UnreadInfo*)[[[UnreadInfo builder] mergeFromData:data] build];
}
+ (UnreadInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UnreadInfo*)[[[UnreadInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UnreadInfo*) parseFromInputStream:(NSInputStream*) input {
  return (UnreadInfo*)[[[UnreadInfo builder] mergeFromInputStream:input] build];
}
+ (UnreadInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UnreadInfo*)[[[UnreadInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UnreadInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UnreadInfo*)[[[UnreadInfo builder] mergeFromCodedInputStream:input] build];
}
+ (UnreadInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UnreadInfo*)[[[UnreadInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UnreadInfoBuilder*) builder {
  return [[UnreadInfoBuilder alloc] init];
}
+ (UnreadInfoBuilder*) builderWithPrototype:(UnreadInfo*) prototype {
  return [[UnreadInfo builder] mergeFrom:prototype];
}
- (UnreadInfoBuilder*) builder {
  return [UnreadInfo builder];
}
- (UnreadInfoBuilder*) toBuilder {
  return [UnreadInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSessionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessionId", [NSNumber numberWithInteger:self.sessionId]];
  }
  if (self.hasSessionType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"sessionType", self.sessionType];
  }
  if (self.hasUnreadCnt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unreadCnt", [NSNumber numberWithInteger:self.unreadCnt]];
  }
  if (self.hasLatestMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latestMsgId", [NSNumber numberWithInteger:self.latestMsgId]];
  }
  if (self.hasLatestMsgData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latestMsgData", self.latestMsgData];
  }
  if (self.hasLatestMsgType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"latestMsgType", self.latestMsgType];
  }
  if (self.hasLatestMsgFromUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latestMsgFromUserId", [NSNumber numberWithInteger:self.latestMsgFromUserId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UnreadInfo class]]) {
    return NO;
  }
  UnreadInfo *otherMessage = other;
  return
      self.hasSessionId == otherMessage.hasSessionId &&
      (!self.hasSessionId || self.sessionId == otherMessage.sessionId) &&
      self.hasSessionType == otherMessage.hasSessionType &&
      (!self.hasSessionType || self.sessionType == otherMessage.sessionType) &&
      self.hasUnreadCnt == otherMessage.hasUnreadCnt &&
      (!self.hasUnreadCnt || self.unreadCnt == otherMessage.unreadCnt) &&
      self.hasLatestMsgId == otherMessage.hasLatestMsgId &&
      (!self.hasLatestMsgId || self.latestMsgId == otherMessage.latestMsgId) &&
      self.hasLatestMsgData == otherMessage.hasLatestMsgData &&
      (!self.hasLatestMsgData || [self.latestMsgData isEqual:otherMessage.latestMsgData]) &&
      self.hasLatestMsgType == otherMessage.hasLatestMsgType &&
      (!self.hasLatestMsgType || self.latestMsgType == otherMessage.latestMsgType) &&
      self.hasLatestMsgFromUserId == otherMessage.hasLatestMsgFromUserId &&
      (!self.hasLatestMsgFromUserId || self.latestMsgFromUserId == otherMessage.latestMsgFromUserId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSessionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sessionId] hash];
  }
  if (self.hasSessionType) {
    hashCode = hashCode * 31 + self.sessionType;
  }
  if (self.hasUnreadCnt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.unreadCnt] hash];
  }
  if (self.hasLatestMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.latestMsgId] hash];
  }
  if (self.hasLatestMsgData) {
    hashCode = hashCode * 31 + [self.latestMsgData hash];
  }
  if (self.hasLatestMsgType) {
    hashCode = hashCode * 31 + self.latestMsgType;
  }
  if (self.hasLatestMsgFromUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.latestMsgFromUserId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UnreadInfoBuilder()
@property (strong) UnreadInfo* result;
@end

@implementation UnreadInfoBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[UnreadInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UnreadInfoBuilder*) clear {
  self.result = [[UnreadInfo alloc] init];
  return self;
}
- (UnreadInfoBuilder*) clone {
  return [UnreadInfo builderWithPrototype:result];
}
- (UnreadInfo*) defaultInstance {
  return [UnreadInfo defaultInstance];
}
- (UnreadInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UnreadInfo*) buildPartial {
  UnreadInfo* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UnreadInfoBuilder*) mergeFrom:(UnreadInfo*) other {
  if (other == [UnreadInfo defaultInstance]) {
    return self;
  }
  if (other.hasSessionId) {
    [self setSessionId:other.sessionId];
  }
  if (other.hasSessionType) {
    [self setSessionType:other.sessionType];
  }
  if (other.hasUnreadCnt) {
    [self setUnreadCnt:other.unreadCnt];
  }
  if (other.hasLatestMsgId) {
    [self setLatestMsgId:other.latestMsgId];
  }
  if (other.hasLatestMsgData) {
    [self setLatestMsgData:other.latestMsgData];
  }
  if (other.hasLatestMsgType) {
    [self setLatestMsgType:other.latestMsgType];
  }
  if (other.hasLatestMsgFromUserId) {
    [self setLatestMsgFromUserId:other.latestMsgFromUserId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UnreadInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UnreadInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSessionId:[input readUInt32]];
        break;
      }
      case 16: {
        SessionType value = (SessionType)[input readEnum];
        if (SessionTypeIsValidValue(value)) {
          [self setSessionType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setUnreadCnt:[input readUInt32]];
        break;
      }
      case 32: {
        [self setLatestMsgId:[input readUInt32]];
        break;
      }
      case 42: {
        [self setLatestMsgData:[input readData]];
        break;
      }
      case 48: {
        MsgType value = (MsgType)[input readEnum];
        if (MsgTypeIsValidValue(value)) {
          [self setLatestMsgType:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 56: {
        [self setLatestMsgFromUserId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSessionId {
  return result.hasSessionId;
}
- (UInt32) sessionId {
  return result.sessionId;
}
- (UnreadInfoBuilder*) setSessionId:(UInt32) value {
  result.hasSessionId = YES;
  result.sessionId = value;
  return self;
}
- (UnreadInfoBuilder*) clearSessionId {
  result.hasSessionId = NO;
  result.sessionId = 0;
  return self;
}
- (BOOL) hasSessionType {
  return result.hasSessionType;
}
- (SessionType) sessionType {
  return result.sessionType;
}
- (UnreadInfoBuilder*) setSessionType:(SessionType) value {
  result.hasSessionType = YES;
  result.sessionType = value;
  return self;
}
- (UnreadInfoBuilder*) clearSessionType {
  result.hasSessionType = NO;
  result.sessionType = SessionTypeSessionTypeSingle;
  return self;
}
- (BOOL) hasUnreadCnt {
  return result.hasUnreadCnt;
}
- (UInt32) unreadCnt {
  return result.unreadCnt;
}
- (UnreadInfoBuilder*) setUnreadCnt:(UInt32) value {
  result.hasUnreadCnt = YES;
  result.unreadCnt = value;
  return self;
}
- (UnreadInfoBuilder*) clearUnreadCnt {
  result.hasUnreadCnt = NO;
  result.unreadCnt = 0;
  return self;
}
- (BOOL) hasLatestMsgId {
  return result.hasLatestMsgId;
}
- (UInt32) latestMsgId {
  return result.latestMsgId;
}
- (UnreadInfoBuilder*) setLatestMsgId:(UInt32) value {
  result.hasLatestMsgId = YES;
  result.latestMsgId = value;
  return self;
}
- (UnreadInfoBuilder*) clearLatestMsgId {
  result.hasLatestMsgId = NO;
  result.latestMsgId = 0;
  return self;
}
- (BOOL) hasLatestMsgData {
  return result.hasLatestMsgData;
}
- (NSData*) latestMsgData {
  return result.latestMsgData;
}
- (UnreadInfoBuilder*) setLatestMsgData:(NSData*) value {
  result.hasLatestMsgData = YES;
  result.latestMsgData = value;
  return self;
}
- (UnreadInfoBuilder*) clearLatestMsgData {
  result.hasLatestMsgData = NO;
  result.latestMsgData = [NSData data];
  return self;
}
- (BOOL) hasLatestMsgType {
  return result.hasLatestMsgType;
}
- (MsgType) latestMsgType {
  return result.latestMsgType;
}
- (UnreadInfoBuilder*) setLatestMsgType:(MsgType) value {
  result.hasLatestMsgType = YES;
  result.latestMsgType = value;
  return self;
}
- (UnreadInfoBuilder*) clearLatestMsgType {
  result.hasLatestMsgType = NO;
  result.latestMsgType = MsgTypeMsgTypeSingleText;
  return self;
}
- (BOOL) hasLatestMsgFromUserId {
  return result.hasLatestMsgFromUserId;
}
- (UInt32) latestMsgFromUserId {
  return result.latestMsgFromUserId;
}
- (UnreadInfoBuilder*) setLatestMsgFromUserId:(UInt32) value {
  result.hasLatestMsgFromUserId = YES;
  result.latestMsgFromUserId = value;
  return self;
}
- (UnreadInfoBuilder*) clearLatestMsgFromUserId {
  result.hasLatestMsgFromUserId = NO;
  result.latestMsgFromUserId = 0;
  return self;
}
@end

@interface MsgInfo ()
@property UInt32 msgId;
@property UInt32 fromSessionId;
@property UInt32 createTime;
@property MsgType msgType;
@property (strong) NSData* msgData;
@end

@implementation MsgInfo

- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) value_ {
  hasMsgId_ = !!value_;
}
@synthesize msgId;
- (BOOL) hasFromSessionId {
  return !!hasFromSessionId_;
}
- (void) setHasFromSessionId:(BOOL) value_ {
  hasFromSessionId_ = !!value_;
}
@synthesize fromSessionId;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value_ {
  hasCreateTime_ = !!value_;
}
@synthesize createTime;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) value_ {
  hasMsgType_ = !!value_;
}
@synthesize msgType;
- (BOOL) hasMsgData {
  return !!hasMsgData_;
}
- (void) setHasMsgData:(BOOL) value_ {
  hasMsgData_ = !!value_;
}
@synthesize msgData;
- (void) dealloc {
  self.msgData = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.msgId = 0;
    self.fromSessionId = 0;
    self.createTime = 0;
    self.msgType = MsgTypeMsgTypeSingleText;
    self.msgData = [NSData data];
  }
  return self;
}
static MsgInfo* defaultMsgInfoInstance = nil;
+ (void) initialize {
  if (self == [MsgInfo class]) {
    defaultMsgInfoInstance = [[MsgInfo alloc] init];
  }
}
+ (MsgInfo*) defaultInstance {
  return defaultMsgInfoInstance;
}
- (MsgInfo*) defaultInstance {
  return defaultMsgInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMsgId) {
    return NO;
  }
  if (!self.hasFromSessionId) {
    return NO;
  }
  if (!self.hasCreateTime) {
    return NO;
  }
  if (!self.hasMsgType) {
    return NO;
  }
  if (!self.hasMsgData) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgId) {
    [output writeUInt32:1 value:self.msgId];
  }
  if (self.hasFromSessionId) {
    [output writeUInt32:2 value:self.fromSessionId];
  }
  if (self.hasCreateTime) {
    [output writeUInt32:3 value:self.createTime];
  }
  if (self.hasMsgType) {
    [output writeEnum:4 value:self.msgType];
  }
  if (self.hasMsgData) {
    [output writeData:5 value:self.msgData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgId) {
    size_ += computeUInt32Size(1, self.msgId);
  }
  if (self.hasFromSessionId) {
    size_ += computeUInt32Size(2, self.fromSessionId);
  }
  if (self.hasCreateTime) {
    size_ += computeUInt32Size(3, self.createTime);
  }
  if (self.hasMsgType) {
    size_ += computeEnumSize(4, self.msgType);
  }
  if (self.hasMsgData) {
    size_ += computeDataSize(5, self.msgData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MsgInfo*) parseFromData:(NSData*) data {
  return (MsgInfo*)[[[MsgInfo builder] mergeFromData:data] build];
}
+ (MsgInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgInfo*)[[[MsgInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgInfo*) parseFromInputStream:(NSInputStream*) input {
  return (MsgInfo*)[[[MsgInfo builder] mergeFromInputStream:input] build];
}
+ (MsgInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgInfo*)[[[MsgInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgInfo*)[[[MsgInfo builder] mergeFromCodedInputStream:input] build];
}
+ (MsgInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgInfo*)[[[MsgInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgInfoBuilder*) builder {
  return [[MsgInfoBuilder alloc] init];
}
+ (MsgInfoBuilder*) builderWithPrototype:(MsgInfo*) prototype {
  return [[MsgInfo builder] mergeFrom:prototype];
}
- (MsgInfoBuilder*) builder {
  return [MsgInfo builder];
}
- (MsgInfoBuilder*) toBuilder {
  return [MsgInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithInteger:self.msgId]];
  }
  if (self.hasFromSessionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromSessionId", [NSNumber numberWithInteger:self.fromSessionId]];
  }
  if (self.hasCreateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createTime", [NSNumber numberWithInteger:self.createTime]];
  }
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"msgType", self.msgType];
  }
  if (self.hasMsgData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgData", self.msgData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MsgInfo class]]) {
    return NO;
  }
  MsgInfo *otherMessage = other;
  return
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasFromSessionId == otherMessage.hasFromSessionId &&
      (!self.hasFromSessionId || self.fromSessionId == otherMessage.fromSessionId) &&
      self.hasCreateTime == otherMessage.hasCreateTime &&
      (!self.hasCreateTime || self.createTime == otherMessage.createTime) &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasMsgData == otherMessage.hasMsgData &&
      (!self.hasMsgData || [self.msgData isEqual:otherMessage.msgData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgId] hash];
  }
  if (self.hasFromSessionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fromSessionId] hash];
  }
  if (self.hasCreateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.createTime] hash];
  }
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + self.msgType;
  }
  if (self.hasMsgData) {
    hashCode = hashCode * 31 + [self.msgData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MsgInfoBuilder()
@property (strong) MsgInfo* result;
@end

@implementation MsgInfoBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[MsgInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgInfoBuilder*) clear {
  self.result = [[MsgInfo alloc] init];
  return self;
}
- (MsgInfoBuilder*) clone {
  return [MsgInfo builderWithPrototype:result];
}
- (MsgInfo*) defaultInstance {
  return [MsgInfo defaultInstance];
}
- (MsgInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgInfo*) buildPartial {
  MsgInfo* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (MsgInfoBuilder*) mergeFrom:(MsgInfo*) other {
  if (other == [MsgInfo defaultInstance]) {
    return self;
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasFromSessionId) {
    [self setFromSessionId:other.fromSessionId];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasMsgData) {
    [self setMsgData:other.msgData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMsgId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setFromSessionId:[input readUInt32]];
        break;
      }
      case 24: {
        [self setCreateTime:[input readUInt32]];
        break;
      }
      case 32: {
        MsgType value = (MsgType)[input readEnum];
        if (MsgTypeIsValidValue(value)) {
          [self setMsgType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 42: {
        [self setMsgData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgId {
  return result.hasMsgId;
}
- (UInt32) msgId {
  return result.msgId;
}
- (MsgInfoBuilder*) setMsgId:(UInt32) value {
  result.hasMsgId = YES;
  result.msgId = value;
  return self;
}
- (MsgInfoBuilder*) clearMsgId {
  result.hasMsgId = NO;
  result.msgId = 0;
  return self;
}
- (BOOL) hasFromSessionId {
  return result.hasFromSessionId;
}
- (UInt32) fromSessionId {
  return result.fromSessionId;
}
- (MsgInfoBuilder*) setFromSessionId:(UInt32) value {
  result.hasFromSessionId = YES;
  result.fromSessionId = value;
  return self;
}
- (MsgInfoBuilder*) clearFromSessionId {
  result.hasFromSessionId = NO;
  result.fromSessionId = 0;
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (UInt32) createTime {
  return result.createTime;
}
- (MsgInfoBuilder*) setCreateTime:(UInt32) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (MsgInfoBuilder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0;
  return self;
}
- (BOOL) hasMsgType {
  return result.hasMsgType;
}
- (MsgType) msgType {
  return result.msgType;
}
- (MsgInfoBuilder*) setMsgType:(MsgType) value {
  result.hasMsgType = YES;
  result.msgType = value;
  return self;
}
- (MsgInfoBuilder*) clearMsgType {
  result.hasMsgType = NO;
  result.msgType = MsgTypeMsgTypeSingleText;
  return self;
}
- (BOOL) hasMsgData {
  return result.hasMsgData;
}
- (NSData*) msgData {
  return result.msgData;
}
- (MsgInfoBuilder*) setMsgData:(NSData*) value {
  result.hasMsgData = YES;
  result.msgData = value;
  return self;
}
- (MsgInfoBuilder*) clearMsgData {
  result.hasMsgData = NO;
  result.msgData = [NSData data];
  return self;
}
@end

@interface GroupVersionInfo ()
@property UInt32 groupId;
@property UInt32 version;
@end

@implementation GroupVersionInfo

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.groupId = 0;
    self.version = 0;
  }
  return self;
}
static GroupVersionInfo* defaultGroupVersionInfoInstance = nil;
+ (void) initialize {
  if (self == [GroupVersionInfo class]) {
    defaultGroupVersionInfoInstance = [[GroupVersionInfo alloc] init];
  }
}
+ (GroupVersionInfo*) defaultInstance {
  return defaultGroupVersionInfoInstance;
}
- (GroupVersionInfo*) defaultInstance {
  return defaultGroupVersionInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeUInt32:1 value:self.groupId];
  }
  if (self.hasVersion) {
    [output writeUInt32:2 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeUInt32Size(1, self.groupId);
  }
  if (self.hasVersion) {
    size_ += computeUInt32Size(2, self.version);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GroupVersionInfo*) parseFromData:(NSData*) data {
  return (GroupVersionInfo*)[[[GroupVersionInfo builder] mergeFromData:data] build];
}
+ (GroupVersionInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupVersionInfo*)[[[GroupVersionInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GroupVersionInfo*) parseFromInputStream:(NSInputStream*) input {
  return (GroupVersionInfo*)[[[GroupVersionInfo builder] mergeFromInputStream:input] build];
}
+ (GroupVersionInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupVersionInfo*)[[[GroupVersionInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GroupVersionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GroupVersionInfo*)[[[GroupVersionInfo builder] mergeFromCodedInputStream:input] build];
}
+ (GroupVersionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupVersionInfo*)[[[GroupVersionInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GroupVersionInfoBuilder*) builder {
  return [[GroupVersionInfoBuilder alloc] init];
}
+ (GroupVersionInfoBuilder*) builderWithPrototype:(GroupVersionInfo*) prototype {
  return [[GroupVersionInfo builder] mergeFrom:prototype];
}
- (GroupVersionInfoBuilder*) builder {
  return [GroupVersionInfo builder];
}
- (GroupVersionInfoBuilder*) toBuilder {
  return [GroupVersionInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithInteger:self.groupId]];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInteger:self.version]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GroupVersionInfo class]]) {
    return NO;
  }
  GroupVersionInfo *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupId] hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.version] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GroupVersionInfoBuilder()
@property (strong) GroupVersionInfo* result;
@end

@implementation GroupVersionInfoBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[GroupVersionInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GroupVersionInfoBuilder*) clear {
  self.result = [[GroupVersionInfo alloc] init];
  return self;
}
- (GroupVersionInfoBuilder*) clone {
  return [GroupVersionInfo builderWithPrototype:result];
}
- (GroupVersionInfo*) defaultInstance {
  return [GroupVersionInfo defaultInstance];
}
- (GroupVersionInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GroupVersionInfo*) buildPartial {
  GroupVersionInfo* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (GroupVersionInfoBuilder*) mergeFrom:(GroupVersionInfo*) other {
  if (other == [GroupVersionInfo defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GroupVersionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GroupVersionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setVersion:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (UInt32) groupId {
  return result.groupId;
}
- (GroupVersionInfoBuilder*) setGroupId:(UInt32) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (GroupVersionInfoBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (UInt32) version {
  return result.version;
}
- (GroupVersionInfoBuilder*) setVersion:(UInt32) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (GroupVersionInfoBuilder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
@end

@interface GroupInfo ()
@property UInt32 groupId;
@property UInt32 version;
@property (strong) NSString* groupName;
@property (strong) NSString* groupAvatar;
@property UInt32 groupCreatorId;
@property GroupType groupType;
@property UInt32 shieldStatus;
@property (strong) PBAppendableArray * groupMemberListArray;
@end

@implementation GroupInfo

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) value_ {
  hasGroupName_ = !!value_;
}
@synthesize groupName;
- (BOOL) hasGroupAvatar {
  return !!hasGroupAvatar_;
}
- (void) setHasGroupAvatar:(BOOL) value_ {
  hasGroupAvatar_ = !!value_;
}
@synthesize groupAvatar;
- (BOOL) hasGroupCreatorId {
  return !!hasGroupCreatorId_;
}
- (void) setHasGroupCreatorId:(BOOL) value_ {
  hasGroupCreatorId_ = !!value_;
}
@synthesize groupCreatorId;
- (BOOL) hasGroupType {
  return !!hasGroupType_;
}
- (void) setHasGroupType:(BOOL) value_ {
  hasGroupType_ = !!value_;
}
@synthesize groupType;
- (BOOL) hasShieldStatus {
  return !!hasShieldStatus_;
}
- (void) setHasShieldStatus:(BOOL) value_ {
  hasShieldStatus_ = !!value_;
}
@synthesize shieldStatus;
@synthesize groupMemberListArray;
@dynamic groupMemberList;
- (void) dealloc {
  self.groupName = nil;
  self.groupAvatar = nil;
  self.groupMemberListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.groupId = 0;
    self.version = 0;
    self.groupName = @"";
    self.groupAvatar = @"";
    self.groupCreatorId = 0;
    self.groupType = GroupTypeGroupTypeNormal;
    self.shieldStatus = 0;
  }
  return self;
}
static GroupInfo* defaultGroupInfoInstance = nil;
+ (void) initialize {
  if (self == [GroupInfo class]) {
    defaultGroupInfoInstance = [[GroupInfo alloc] init];
  }
}
+ (GroupInfo*) defaultInstance {
  return defaultGroupInfoInstance;
}
- (GroupInfo*) defaultInstance {
  return defaultGroupInfoInstance;
}
- (PBArray *)groupMemberList {
  return groupMemberListArray;
}
- (UInt32)groupMemberListAtIndex:(NSUInteger)index {
  return [groupMemberListArray uint32AtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasVersion) {
    return NO;
  }
  if (!self.hasGroupName) {
    return NO;
  }
  if (!self.hasGroupAvatar) {
    return NO;
  }
  if (!self.hasGroupCreatorId) {
    return NO;
  }
  if (!self.hasGroupType) {
    return NO;
  }
  if (!self.hasShieldStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeUInt32:1 value:self.groupId];
  }
  if (self.hasVersion) {
    [output writeUInt32:2 value:self.version];
  }
  if (self.hasGroupName) {
    [output writeString:3 value:self.groupName];
  }
  if (self.hasGroupAvatar) {
    [output writeString:4 value:self.groupAvatar];
  }
  if (self.hasGroupCreatorId) {
    [output writeUInt32:5 value:self.groupCreatorId];
  }
  if (self.hasGroupType) {
    [output writeEnum:6 value:self.groupType];
  }
  if (self.hasShieldStatus) {
    [output writeUInt32:7 value:self.shieldStatus];
  }
  const NSUInteger groupMemberListArrayCount = self.groupMemberListArray.count;
  if (groupMemberListArrayCount > 0) {
    const UInt32 *values = (const UInt32 *)self.groupMemberListArray.data;
    for (NSUInteger i = 0; i < groupMemberListArrayCount; ++i) {
      [output writeUInt32:8 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeUInt32Size(1, self.groupId);
  }
  if (self.hasVersion) {
    size_ += computeUInt32Size(2, self.version);
  }
  if (self.hasGroupName) {
    size_ += computeStringSize(3, self.groupName);
  }
  if (self.hasGroupAvatar) {
    size_ += computeStringSize(4, self.groupAvatar);
  }
  if (self.hasGroupCreatorId) {
    size_ += computeUInt32Size(5, self.groupCreatorId);
  }
  if (self.hasGroupType) {
    size_ += computeEnumSize(6, self.groupType);
  }
  if (self.hasShieldStatus) {
    size_ += computeUInt32Size(7, self.shieldStatus);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.groupMemberListArray.count;
    const UInt32 *values = (const UInt32 *)self.groupMemberListArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GroupInfo*) parseFromData:(NSData*) data {
  return (GroupInfo*)[[[GroupInfo builder] mergeFromData:data] build];
}
+ (GroupInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupInfo*)[[[GroupInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GroupInfo*) parseFromInputStream:(NSInputStream*) input {
  return (GroupInfo*)[[[GroupInfo builder] mergeFromInputStream:input] build];
}
+ (GroupInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupInfo*)[[[GroupInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GroupInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GroupInfo*)[[[GroupInfo builder] mergeFromCodedInputStream:input] build];
}
+ (GroupInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupInfo*)[[[GroupInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GroupInfoBuilder*) builder {
  return [[GroupInfoBuilder alloc] init];
}
+ (GroupInfoBuilder*) builderWithPrototype:(GroupInfo*) prototype {
  return [[GroupInfo builder] mergeFrom:prototype];
}
- (GroupInfoBuilder*) builder {
  return [GroupInfo builder];
}
- (GroupInfoBuilder*) toBuilder {
  return [GroupInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithInteger:self.groupId]];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInteger:self.version]];
  }
  if (self.hasGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupName", self.groupName];
  }
  if (self.hasGroupAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupAvatar", self.groupAvatar];
  }
  if (self.hasGroupCreatorId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupCreatorId", [NSNumber numberWithInteger:self.groupCreatorId]];
  }
  if (self.hasGroupType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"groupType", self.groupType];
  }
  if (self.hasShieldStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shieldStatus", [NSNumber numberWithInteger:self.shieldStatus]];
  }
  [self.groupMemberListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupMemberList", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GroupInfo class]]) {
    return NO;
  }
  GroupInfo *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      self.hasGroupName == otherMessage.hasGroupName &&
      (!self.hasGroupName || [self.groupName isEqual:otherMessage.groupName]) &&
      self.hasGroupAvatar == otherMessage.hasGroupAvatar &&
      (!self.hasGroupAvatar || [self.groupAvatar isEqual:otherMessage.groupAvatar]) &&
      self.hasGroupCreatorId == otherMessage.hasGroupCreatorId &&
      (!self.hasGroupCreatorId || self.groupCreatorId == otherMessage.groupCreatorId) &&
      self.hasGroupType == otherMessage.hasGroupType &&
      (!self.hasGroupType || self.groupType == otherMessage.groupType) &&
      self.hasShieldStatus == otherMessage.hasShieldStatus &&
      (!self.hasShieldStatus || self.shieldStatus == otherMessage.shieldStatus) &&
      [self.groupMemberListArray isEqualToArray:otherMessage.groupMemberListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupId] hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.version] hash];
  }
  if (self.hasGroupName) {
    hashCode = hashCode * 31 + [self.groupName hash];
  }
  if (self.hasGroupAvatar) {
    hashCode = hashCode * 31 + [self.groupAvatar hash];
  }
  if (self.hasGroupCreatorId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupCreatorId] hash];
  }
  if (self.hasGroupType) {
    hashCode = hashCode * 31 + self.groupType;
  }
  if (self.hasShieldStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.shieldStatus] hash];
  }
  [self.groupMemberListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GroupInfoBuilder()
@property (strong) GroupInfo* result;
@end

@implementation GroupInfoBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[GroupInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GroupInfoBuilder*) clear {
  self.result = [[GroupInfo alloc] init];
  return self;
}
- (GroupInfoBuilder*) clone {
  return [GroupInfo builderWithPrototype:result];
}
- (GroupInfo*) defaultInstance {
  return [GroupInfo defaultInstance];
}
- (GroupInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GroupInfo*) buildPartial {
  GroupInfo* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (GroupInfoBuilder*) mergeFrom:(GroupInfo*) other {
  if (other == [GroupInfo defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  if (other.hasGroupAvatar) {
    [self setGroupAvatar:other.groupAvatar];
  }
  if (other.hasGroupCreatorId) {
    [self setGroupCreatorId:other.groupCreatorId];
  }
  if (other.hasGroupType) {
    [self setGroupType:other.groupType];
  }
  if (other.hasShieldStatus) {
    [self setShieldStatus:other.shieldStatus];
  }
  if (other.groupMemberListArray.count > 0) {
    if (result.groupMemberListArray == nil) {
      result.groupMemberListArray = [other.groupMemberListArray copy];
    } else {
      [result.groupMemberListArray appendArray:other.groupMemberListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GroupInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GroupInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setVersion:[input readUInt32]];
        break;
      }
      case 26: {
        [self setGroupName:[input readString]];
        break;
      }
      case 34: {
        [self setGroupAvatar:[input readString]];
        break;
      }
      case 40: {
        [self setGroupCreatorId:[input readUInt32]];
        break;
      }
      case 48: {
        GroupType value = (GroupType)[input readEnum];
        if (GroupTypeIsValidValue(value)) {
          [self setGroupType:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 56: {
        [self setShieldStatus:[input readUInt32]];
        break;
      }
      case 64: {
        [self addGroupMemberList:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (UInt32) groupId {
  return result.groupId;
}
- (GroupInfoBuilder*) setGroupId:(UInt32) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (GroupInfoBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (UInt32) version {
  return result.version;
}
- (GroupInfoBuilder*) setVersion:(UInt32) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (GroupInfoBuilder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
- (BOOL) hasGroupName {
  return result.hasGroupName;
}
- (NSString*) groupName {
  return result.groupName;
}
- (GroupInfoBuilder*) setGroupName:(NSString*) value {
  result.hasGroupName = YES;
  result.groupName = value;
  return self;
}
- (GroupInfoBuilder*) clearGroupName {
  result.hasGroupName = NO;
  result.groupName = @"";
  return self;
}
- (BOOL) hasGroupAvatar {
  return result.hasGroupAvatar;
}
- (NSString*) groupAvatar {
  return result.groupAvatar;
}
- (GroupInfoBuilder*) setGroupAvatar:(NSString*) value {
  result.hasGroupAvatar = YES;
  result.groupAvatar = value;
  return self;
}
- (GroupInfoBuilder*) clearGroupAvatar {
  result.hasGroupAvatar = NO;
  result.groupAvatar = @"";
  return self;
}
- (BOOL) hasGroupCreatorId {
  return result.hasGroupCreatorId;
}
- (UInt32) groupCreatorId {
  return result.groupCreatorId;
}
- (GroupInfoBuilder*) setGroupCreatorId:(UInt32) value {
  result.hasGroupCreatorId = YES;
  result.groupCreatorId = value;
  return self;
}
- (GroupInfoBuilder*) clearGroupCreatorId {
  result.hasGroupCreatorId = NO;
  result.groupCreatorId = 0;
  return self;
}
- (BOOL) hasGroupType {
  return result.hasGroupType;
}
- (GroupType) groupType {
  return result.groupType;
}
- (GroupInfoBuilder*) setGroupType:(GroupType) value {
  result.hasGroupType = YES;
  result.groupType = value;
  return self;
}
- (GroupInfoBuilder*) clearGroupType {
  result.hasGroupType = NO;
  result.groupType = GroupTypeGroupTypeNormal;
  return self;
}
- (BOOL) hasShieldStatus {
  return result.hasShieldStatus;
}
- (UInt32) shieldStatus {
  return result.shieldStatus;
}
- (GroupInfoBuilder*) setShieldStatus:(UInt32) value {
  result.hasShieldStatus = YES;
  result.shieldStatus = value;
  return self;
}
- (GroupInfoBuilder*) clearShieldStatus {
  result.hasShieldStatus = NO;
  result.shieldStatus = 0;
  return self;
}
- (PBAppendableArray *)groupMemberList {
  return result.groupMemberListArray;
}
- (UInt32)groupMemberListAtIndex:(NSUInteger)index {
  return [result groupMemberListAtIndex:index];
}
- (GroupInfoBuilder *)addGroupMemberList:(UInt32)value {
  if (result.groupMemberListArray == nil) {
    result.groupMemberListArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [result.groupMemberListArray addUint32:value];
  return self;
}
- (GroupInfoBuilder *)setGroupMemberListArray:(NSArray *)array {
  result.groupMemberListArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (GroupInfoBuilder *)setGroupMemberListValues:(const UInt32 *)values count:(NSUInteger)count {
  result.groupMemberListArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (GroupInfoBuilder *)clearGroupMemberList {
  result.groupMemberListArray = nil;
  return self;
}
@end

@interface UserTokenInfo ()
@property UInt32 userId;
@property ClientType userType;
@property (strong) NSString* token;
@property UInt32 pushCount;
@property UInt32 pushType;
@end

@implementation UserTokenInfo

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) value_ {
  hasUserType_ = !!value_;
}
@synthesize userType;
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value_ {
  hasToken_ = !!value_;
}
@synthesize token;
- (BOOL) hasPushCount {
  return !!hasPushCount_;
}
- (void) setHasPushCount:(BOOL) value_ {
  hasPushCount_ = !!value_;
}
@synthesize pushCount;
- (BOOL) hasPushType {
  return !!hasPushType_;
}
- (void) setHasPushType:(BOOL) value_ {
  hasPushType_ = !!value_;
}
@synthesize pushType;
- (void) dealloc {
  self.token = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.userType = ClientTypeClientTypeWindows;
    self.token = @"";
    self.pushCount = 0;
    self.pushType = 0;
  }
  return self;
}
static UserTokenInfo* defaultUserTokenInfoInstance = nil;
+ (void) initialize {
  if (self == [UserTokenInfo class]) {
    defaultUserTokenInfoInstance = [[UserTokenInfo alloc] init];
  }
}
+ (UserTokenInfo*) defaultInstance {
  return defaultUserTokenInfoInstance;
}
- (UserTokenInfo*) defaultInstance {
  return defaultUserTokenInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasUserType) {
    return NO;
  }
  if (!self.hasToken) {
    return NO;
  }
  if (!self.hasPushCount) {
    return NO;
  }
  if (!self.hasPushType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasUserType) {
    [output writeEnum:2 value:self.userType];
  }
  if (self.hasToken) {
    [output writeString:3 value:self.token];
  }
  if (self.hasPushCount) {
    [output writeUInt32:4 value:self.pushCount];
  }
  if (self.hasPushType) {
    [output writeUInt32:5 value:self.pushType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasUserType) {
    size_ += computeEnumSize(2, self.userType);
  }
  if (self.hasToken) {
    size_ += computeStringSize(3, self.token);
  }
  if (self.hasPushCount) {
    size_ += computeUInt32Size(4, self.pushCount);
  }
  if (self.hasPushType) {
    size_ += computeUInt32Size(5, self.pushType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserTokenInfo*) parseFromData:(NSData*) data {
  return (UserTokenInfo*)[[[UserTokenInfo builder] mergeFromData:data] build];
}
+ (UserTokenInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserTokenInfo*)[[[UserTokenInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserTokenInfo*) parseFromInputStream:(NSInputStream*) input {
  return (UserTokenInfo*)[[[UserTokenInfo builder] mergeFromInputStream:input] build];
}
+ (UserTokenInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserTokenInfo*)[[[UserTokenInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserTokenInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserTokenInfo*)[[[UserTokenInfo builder] mergeFromCodedInputStream:input] build];
}
+ (UserTokenInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserTokenInfo*)[[[UserTokenInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserTokenInfoBuilder*) builder {
  return [[UserTokenInfoBuilder alloc] init];
}
+ (UserTokenInfoBuilder*) builderWithPrototype:(UserTokenInfo*) prototype {
  return [[UserTokenInfo builder] mergeFrom:prototype];
}
- (UserTokenInfoBuilder*) builder {
  return [UserTokenInfo builder];
}
- (UserTokenInfoBuilder*) toBuilder {
  return [UserTokenInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasUserType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"userType", self.userType];
  }
  if (self.hasToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"token", self.token];
  }
  if (self.hasPushCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pushCount", [NSNumber numberWithInteger:self.pushCount]];
  }
  if (self.hasPushType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pushType", [NSNumber numberWithInteger:self.pushType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserTokenInfo class]]) {
    return NO;
  }
  UserTokenInfo *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasUserType == otherMessage.hasUserType &&
      (!self.hasUserType || self.userType == otherMessage.userType) &&
      self.hasToken == otherMessage.hasToken &&
      (!self.hasToken || [self.token isEqual:otherMessage.token]) &&
      self.hasPushCount == otherMessage.hasPushCount &&
      (!self.hasPushCount || self.pushCount == otherMessage.pushCount) &&
      self.hasPushType == otherMessage.hasPushType &&
      (!self.hasPushType || self.pushType == otherMessage.pushType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasUserType) {
    hashCode = hashCode * 31 + self.userType;
  }
  if (self.hasToken) {
    hashCode = hashCode * 31 + [self.token hash];
  }
  if (self.hasPushCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pushCount] hash];
  }
  if (self.hasPushType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pushType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserTokenInfoBuilder()
@property (strong) UserTokenInfo* result;
@end

@implementation UserTokenInfoBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[UserTokenInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserTokenInfoBuilder*) clear {
  self.result = [[UserTokenInfo alloc] init];
  return self;
}
- (UserTokenInfoBuilder*) clone {
  return [UserTokenInfo builderWithPrototype:result];
}
- (UserTokenInfo*) defaultInstance {
  return [UserTokenInfo defaultInstance];
}
- (UserTokenInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserTokenInfo*) buildPartial {
  UserTokenInfo* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UserTokenInfoBuilder*) mergeFrom:(UserTokenInfo*) other {
  if (other == [UserTokenInfo defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasPushCount) {
    [self setPushCount:other.pushCount];
  }
  if (other.hasPushType) {
    [self setPushType:other.pushType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserTokenInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserTokenInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        ClientType value = (ClientType)[input readEnum];
        if (ClientTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setToken:[input readString]];
        break;
      }
      case 32: {
        [self setPushCount:[input readUInt32]];
        break;
      }
      case 40: {
        [self setPushType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (UInt32) userId {
  return result.userId;
}
- (UserTokenInfoBuilder*) setUserId:(UInt32) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (UserTokenInfoBuilder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasUserType {
  return result.hasUserType;
}
- (ClientType) userType {
  return result.userType;
}
- (UserTokenInfoBuilder*) setUserType:(ClientType) value {
  result.hasUserType = YES;
  result.userType = value;
  return self;
}
- (UserTokenInfoBuilder*) clearUserType {
  result.hasUserType = NO;
  result.userType = ClientTypeClientTypeWindows;
  return self;
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (UserTokenInfoBuilder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (UserTokenInfoBuilder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasPushCount {
  return result.hasPushCount;
}
- (UInt32) pushCount {
  return result.pushCount;
}
- (UserTokenInfoBuilder*) setPushCount:(UInt32) value {
  result.hasPushCount = YES;
  result.pushCount = value;
  return self;
}
- (UserTokenInfoBuilder*) clearPushCount {
  result.hasPushCount = NO;
  result.pushCount = 0;
  return self;
}
- (BOOL) hasPushType {
  return result.hasPushType;
}
- (UInt32) pushType {
  return result.pushType;
}
- (UserTokenInfoBuilder*) setPushType:(UInt32) value {
  result.hasPushType = YES;
  result.pushType = value;
  return self;
}
- (UserTokenInfoBuilder*) clearPushType {
  result.hasPushType = NO;
  result.pushType = 0;
  return self;
}
@end

@interface PushResult ()
@property (strong) NSString* userToken;
@property UInt32 resultCode;
@end

@implementation PushResult

- (BOOL) hasUserToken {
  return !!hasUserToken_;
}
- (void) setHasUserToken:(BOOL) value_ {
  hasUserToken_ = !!value_;
}
@synthesize userToken;
- (BOOL) hasResultCode {
  return !!hasResultCode_;
}
- (void) setHasResultCode:(BOOL) value_ {
  hasResultCode_ = !!value_;
}
@synthesize resultCode;
- (void) dealloc {
  self.userToken = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.userToken = @"";
    self.resultCode = 0;
  }
  return self;
}
static PushResult* defaultPushResultInstance = nil;
+ (void) initialize {
  if (self == [PushResult class]) {
    defaultPushResultInstance = [[PushResult alloc] init];
  }
}
+ (PushResult*) defaultInstance {
  return defaultPushResultInstance;
}
- (PushResult*) defaultInstance {
  return defaultPushResultInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserToken) {
    return NO;
  }
  if (!self.hasResultCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserToken) {
    [output writeString:1 value:self.userToken];
  }
  if (self.hasResultCode) {
    [output writeUInt32:2 value:self.resultCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserToken) {
    size_ += computeStringSize(1, self.userToken);
  }
  if (self.hasResultCode) {
    size_ += computeUInt32Size(2, self.resultCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PushResult*) parseFromData:(NSData*) data {
  return (PushResult*)[[[PushResult builder] mergeFromData:data] build];
}
+ (PushResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushResult*)[[[PushResult builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PushResult*) parseFromInputStream:(NSInputStream*) input {
  return (PushResult*)[[[PushResult builder] mergeFromInputStream:input] build];
}
+ (PushResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushResult*)[[[PushResult builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushResult*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PushResult*)[[[PushResult builder] mergeFromCodedInputStream:input] build];
}
+ (PushResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushResult*)[[[PushResult builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushResultBuilder*) builder {
  return [[PushResultBuilder alloc] init];
}
+ (PushResultBuilder*) builderWithPrototype:(PushResult*) prototype {
  return [[PushResult builder] mergeFrom:prototype];
}
- (PushResultBuilder*) builder {
  return [PushResult builder];
}
- (PushResultBuilder*) toBuilder {
  return [PushResult builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userToken", self.userToken];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", [NSNumber numberWithInteger:self.resultCode]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PushResult class]]) {
    return NO;
  }
  PushResult *otherMessage = other;
  return
      self.hasUserToken == otherMessage.hasUserToken &&
      (!self.hasUserToken || [self.userToken isEqual:otherMessage.userToken]) &&
      self.hasResultCode == otherMessage.hasResultCode &&
      (!self.hasResultCode || self.resultCode == otherMessage.resultCode) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserToken) {
    hashCode = hashCode * 31 + [self.userToken hash];
  }
  if (self.hasResultCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.resultCode] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PushResultBuilder()
@property (strong) PushResult* result;
@end

@implementation PushResultBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[PushResult alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PushResultBuilder*) clear {
  self.result = [[PushResult alloc] init];
  return self;
}
- (PushResultBuilder*) clone {
  return [PushResult builderWithPrototype:result];
}
- (PushResult*) defaultInstance {
  return [PushResult defaultInstance];
}
- (PushResult*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PushResult*) buildPartial {
  PushResult* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PushResultBuilder*) mergeFrom:(PushResult*) other {
  if (other == [PushResult defaultInstance]) {
    return self;
  }
  if (other.hasUserToken) {
    [self setUserToken:other.userToken];
  }
  if (other.hasResultCode) {
    [self setResultCode:other.resultCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PushResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PushResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserToken:[input readString]];
        break;
      }
      case 16: {
        [self setResultCode:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserToken {
  return result.hasUserToken;
}
- (NSString*) userToken {
  return result.userToken;
}
- (PushResultBuilder*) setUserToken:(NSString*) value {
  result.hasUserToken = YES;
  result.userToken = value;
  return self;
}
- (PushResultBuilder*) clearUserToken {
  result.hasUserToken = NO;
  result.userToken = @"";
  return self;
}
- (BOOL) hasResultCode {
  return result.hasResultCode;
}
- (UInt32) resultCode {
  return result.resultCode;
}
- (PushResultBuilder*) setResultCode:(UInt32) value {
  result.hasResultCode = YES;
  result.resultCode = value;
  return self;
}
- (PushResultBuilder*) clearResultCode {
  result.hasResultCode = NO;
  result.resultCode = 0;
  return self;
}
@end

@interface ShieldStatus ()
@property UInt32 userId;
@property UInt32 groupId;
@property UInt32 shieldStatus;
@end

@implementation ShieldStatus

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (BOOL) hasShieldStatus {
  return !!hasShieldStatus_;
}
- (void) setHasShieldStatus:(BOOL) value_ {
  hasShieldStatus_ = !!value_;
}
@synthesize shieldStatus;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.groupId = 0;
    self.shieldStatus = 0;
  }
  return self;
}
static ShieldStatus* defaultShieldStatusInstance = nil;
+ (void) initialize {
  if (self == [ShieldStatus class]) {
    defaultShieldStatusInstance = [[ShieldStatus alloc] init];
  }
}
+ (ShieldStatus*) defaultInstance {
  return defaultShieldStatusInstance;
}
- (ShieldStatus*) defaultInstance {
  return defaultShieldStatusInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasShieldStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasGroupId) {
    [output writeUInt32:2 value:self.groupId];
  }
  if (self.hasShieldStatus) {
    [output writeUInt32:3 value:self.shieldStatus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasGroupId) {
    size_ += computeUInt32Size(2, self.groupId);
  }
  if (self.hasShieldStatus) {
    size_ += computeUInt32Size(3, self.shieldStatus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ShieldStatus*) parseFromData:(NSData*) data {
  return (ShieldStatus*)[[[ShieldStatus builder] mergeFromData:data] build];
}
+ (ShieldStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShieldStatus*)[[[ShieldStatus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ShieldStatus*) parseFromInputStream:(NSInputStream*) input {
  return (ShieldStatus*)[[[ShieldStatus builder] mergeFromInputStream:input] build];
}
+ (ShieldStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShieldStatus*)[[[ShieldStatus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShieldStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ShieldStatus*)[[[ShieldStatus builder] mergeFromCodedInputStream:input] build];
}
+ (ShieldStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShieldStatus*)[[[ShieldStatus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShieldStatusBuilder*) builder {
  return [[ShieldStatusBuilder alloc] init];
}
+ (ShieldStatusBuilder*) builderWithPrototype:(ShieldStatus*) prototype {
  return [[ShieldStatus builder] mergeFrom:prototype];
}
- (ShieldStatusBuilder*) builder {
  return [ShieldStatus builder];
}
- (ShieldStatusBuilder*) toBuilder {
  return [ShieldStatus builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithInteger:self.groupId]];
  }
  if (self.hasShieldStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shieldStatus", [NSNumber numberWithInteger:self.shieldStatus]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ShieldStatus class]]) {
    return NO;
  }
  ShieldStatus *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasShieldStatus == otherMessage.hasShieldStatus &&
      (!self.hasShieldStatus || self.shieldStatus == otherMessage.shieldStatus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupId] hash];
  }
  if (self.hasShieldStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.shieldStatus] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ShieldStatusBuilder()
@property (strong) ShieldStatus* result;
@end

@implementation ShieldStatusBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[ShieldStatus alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ShieldStatusBuilder*) clear {
  self.result = [[ShieldStatus alloc] init];
  return self;
}
- (ShieldStatusBuilder*) clone {
  return [ShieldStatus builderWithPrototype:result];
}
- (ShieldStatus*) defaultInstance {
  return [ShieldStatus defaultInstance];
}
- (ShieldStatus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ShieldStatus*) buildPartial {
  ShieldStatus* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ShieldStatusBuilder*) mergeFrom:(ShieldStatus*) other {
  if (other == [ShieldStatus defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasShieldStatus) {
    [self setShieldStatus:other.shieldStatus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ShieldStatusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ShieldStatusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setGroupId:[input readUInt32]];
        break;
      }
      case 24: {
        [self setShieldStatus:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (UInt32) userId {
  return result.userId;
}
- (ShieldStatusBuilder*) setUserId:(UInt32) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (ShieldStatusBuilder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (UInt32) groupId {
  return result.groupId;
}
- (ShieldStatusBuilder*) setGroupId:(UInt32) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (ShieldStatusBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = 0;
  return self;
}
- (BOOL) hasShieldStatus {
  return result.hasShieldStatus;
}
- (UInt32) shieldStatus {
  return result.shieldStatus;
}
- (ShieldStatusBuilder*) setShieldStatus:(UInt32) value {
  result.hasShieldStatus = YES;
  result.shieldStatus = value;
  return self;
}
- (ShieldStatusBuilder*) clearShieldStatus {
  result.hasShieldStatus = NO;
  result.shieldStatus = 0;
  return self;
}
@end

@interface OfflineFileInfo ()
@property UInt32 fromUserId;
@property (strong) NSString* taskId;
@property (strong) NSString* fileName;
@property UInt32 fileSize;
@end

@implementation OfflineFileInfo

- (BOOL) hasFromUserId {
  return !!hasFromUserId_;
}
- (void) setHasFromUserId:(BOOL) value_ {
  hasFromUserId_ = !!value_;
}
@synthesize fromUserId;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value_ {
  hasTaskId_ = !!value_;
}
@synthesize taskId;
- (BOOL) hasFileName {
  return !!hasFileName_;
}
- (void) setHasFileName:(BOOL) value_ {
  hasFileName_ = !!value_;
}
@synthesize fileName;
- (BOOL) hasFileSize {
  return !!hasFileSize_;
}
- (void) setHasFileSize:(BOOL) value_ {
  hasFileSize_ = !!value_;
}
@synthesize fileSize;
- (void) dealloc {
  self.taskId = nil;
  self.fileName = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.fromUserId = 0;
    self.taskId = @"";
    self.fileName = @"";
    self.fileSize = 0;
  }
  return self;
}
static OfflineFileInfo* defaultOfflineFileInfoInstance = nil;
+ (void) initialize {
  if (self == [OfflineFileInfo class]) {
    defaultOfflineFileInfoInstance = [[OfflineFileInfo alloc] init];
  }
}
+ (OfflineFileInfo*) defaultInstance {
  return defaultOfflineFileInfoInstance;
}
- (OfflineFileInfo*) defaultInstance {
  return defaultOfflineFileInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFromUserId) {
    return NO;
  }
  if (!self.hasTaskId) {
    return NO;
  }
  if (!self.hasFileName) {
    return NO;
  }
  if (!self.hasFileSize) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFromUserId) {
    [output writeUInt32:1 value:self.fromUserId];
  }
  if (self.hasTaskId) {
    [output writeString:2 value:self.taskId];
  }
  if (self.hasFileName) {
    [output writeString:3 value:self.fileName];
  }
  if (self.hasFileSize) {
    [output writeUInt32:4 value:self.fileSize];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFromUserId) {
    size_ += computeUInt32Size(1, self.fromUserId);
  }
  if (self.hasTaskId) {
    size_ += computeStringSize(2, self.taskId);
  }
  if (self.hasFileName) {
    size_ += computeStringSize(3, self.fileName);
  }
  if (self.hasFileSize) {
    size_ += computeUInt32Size(4, self.fileSize);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (OfflineFileInfo*) parseFromData:(NSData*) data {
  return (OfflineFileInfo*)[[[OfflineFileInfo builder] mergeFromData:data] build];
}
+ (OfflineFileInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OfflineFileInfo*)[[[OfflineFileInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (OfflineFileInfo*) parseFromInputStream:(NSInputStream*) input {
  return (OfflineFileInfo*)[[[OfflineFileInfo builder] mergeFromInputStream:input] build];
}
+ (OfflineFileInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OfflineFileInfo*)[[[OfflineFileInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OfflineFileInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (OfflineFileInfo*)[[[OfflineFileInfo builder] mergeFromCodedInputStream:input] build];
}
+ (OfflineFileInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OfflineFileInfo*)[[[OfflineFileInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OfflineFileInfoBuilder*) builder {
  return [[OfflineFileInfoBuilder alloc] init];
}
+ (OfflineFileInfoBuilder*) builderWithPrototype:(OfflineFileInfo*) prototype {
  return [[OfflineFileInfo builder] mergeFrom:prototype];
}
- (OfflineFileInfoBuilder*) builder {
  return [OfflineFileInfo builder];
}
- (OfflineFileInfoBuilder*) toBuilder {
  return [OfflineFileInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFromUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUserId", [NSNumber numberWithInteger:self.fromUserId]];
  }
  if (self.hasTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskId", self.taskId];
  }
  if (self.hasFileName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fileName", self.fileName];
  }
  if (self.hasFileSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fileSize", [NSNumber numberWithInteger:self.fileSize]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[OfflineFileInfo class]]) {
    return NO;
  }
  OfflineFileInfo *otherMessage = other;
  return
      self.hasFromUserId == otherMessage.hasFromUserId &&
      (!self.hasFromUserId || self.fromUserId == otherMessage.fromUserId) &&
      self.hasTaskId == otherMessage.hasTaskId &&
      (!self.hasTaskId || [self.taskId isEqual:otherMessage.taskId]) &&
      self.hasFileName == otherMessage.hasFileName &&
      (!self.hasFileName || [self.fileName isEqual:otherMessage.fileName]) &&
      self.hasFileSize == otherMessage.hasFileSize &&
      (!self.hasFileSize || self.fileSize == otherMessage.fileSize) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFromUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fromUserId] hash];
  }
  if (self.hasTaskId) {
    hashCode = hashCode * 31 + [self.taskId hash];
  }
  if (self.hasFileName) {
    hashCode = hashCode * 31 + [self.fileName hash];
  }
  if (self.hasFileSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fileSize] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface OfflineFileInfoBuilder()
@property (strong) OfflineFileInfo* result;
@end

@implementation OfflineFileInfoBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[OfflineFileInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (OfflineFileInfoBuilder*) clear {
  self.result = [[OfflineFileInfo alloc] init];
  return self;
}
- (OfflineFileInfoBuilder*) clone {
  return [OfflineFileInfo builderWithPrototype:result];
}
- (OfflineFileInfo*) defaultInstance {
  return [OfflineFileInfo defaultInstance];
}
- (OfflineFileInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (OfflineFileInfo*) buildPartial {
  OfflineFileInfo* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (OfflineFileInfoBuilder*) mergeFrom:(OfflineFileInfo*) other {
  if (other == [OfflineFileInfo defaultInstance]) {
    return self;
  }
  if (other.hasFromUserId) {
    [self setFromUserId:other.fromUserId];
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasFileName) {
    [self setFileName:other.fileName];
  }
  if (other.hasFileSize) {
    [self setFileSize:other.fileSize];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (OfflineFileInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (OfflineFileInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFromUserId:[input readUInt32]];
        break;
      }
      case 18: {
        [self setTaskId:[input readString]];
        break;
      }
      case 26: {
        [self setFileName:[input readString]];
        break;
      }
      case 32: {
        [self setFileSize:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasFromUserId {
  return result.hasFromUserId;
}
- (UInt32) fromUserId {
  return result.fromUserId;
}
- (OfflineFileInfoBuilder*) setFromUserId:(UInt32) value {
  result.hasFromUserId = YES;
  result.fromUserId = value;
  return self;
}
- (OfflineFileInfoBuilder*) clearFromUserId {
  result.hasFromUserId = NO;
  result.fromUserId = 0;
  return self;
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (NSString*) taskId {
  return result.taskId;
}
- (OfflineFileInfoBuilder*) setTaskId:(NSString*) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (OfflineFileInfoBuilder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = @"";
  return self;
}
- (BOOL) hasFileName {
  return result.hasFileName;
}
- (NSString*) fileName {
  return result.fileName;
}
- (OfflineFileInfoBuilder*) setFileName:(NSString*) value {
  result.hasFileName = YES;
  result.fileName = value;
  return self;
}
- (OfflineFileInfoBuilder*) clearFileName {
  result.hasFileName = NO;
  result.fileName = @"";
  return self;
}
- (BOOL) hasFileSize {
  return result.hasFileSize;
}
- (UInt32) fileSize {
  return result.fileSize;
}
- (OfflineFileInfoBuilder*) setFileSize:(UInt32) value {
  result.hasFileSize = YES;
  result.fileSize = value;
  return self;
}
- (OfflineFileInfoBuilder*) clearFileSize {
  result.hasFileSize = NO;
  result.fileSize = 0;
  return self;
}
@end

@interface AuthInfo ()
@property (strong) NSString* appKey;
@property UInt32 userId;
@property (strong) NSString* allowdUserIds;
@property (strong) NSString* allowdGroupIds;
@property (strong) NSString* authInterfaces;
@property (strong) NSString* authIps;
@end

@implementation AuthInfo

- (BOOL) hasAppKey {
  return !!hasAppKey_;
}
- (void) setHasAppKey:(BOOL) value_ {
  hasAppKey_ = !!value_;
}
@synthesize appKey;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasAllowdUserIds {
  return !!hasAllowdUserIds_;
}
- (void) setHasAllowdUserIds:(BOOL) value_ {
  hasAllowdUserIds_ = !!value_;
}
@synthesize allowdUserIds;
- (BOOL) hasAllowdGroupIds {
  return !!hasAllowdGroupIds_;
}
- (void) setHasAllowdGroupIds:(BOOL) value_ {
  hasAllowdGroupIds_ = !!value_;
}
@synthesize allowdGroupIds;
- (BOOL) hasAuthInterfaces {
  return !!hasAuthInterfaces_;
}
- (void) setHasAuthInterfaces:(BOOL) value_ {
  hasAuthInterfaces_ = !!value_;
}
@synthesize authInterfaces;
- (BOOL) hasAuthIps {
  return !!hasAuthIps_;
}
- (void) setHasAuthIps:(BOOL) value_ {
  hasAuthIps_ = !!value_;
}
@synthesize authIps;
- (void) dealloc {
  self.appKey = nil;
  self.allowdUserIds = nil;
  self.allowdGroupIds = nil;
  self.authInterfaces = nil;
  self.authIps = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.appKey = @"";
    self.userId = 0;
    self.allowdUserIds = @"";
    self.allowdGroupIds = @"";
    self.authInterfaces = @"";
    self.authIps = @"";
  }
  return self;
}
static AuthInfo* defaultAuthInfoInstance = nil;
+ (void) initialize {
  if (self == [AuthInfo class]) {
    defaultAuthInfoInstance = [[AuthInfo alloc] init];
  }
}
+ (AuthInfo*) defaultInstance {
  return defaultAuthInfoInstance;
}
- (AuthInfo*) defaultInstance {
  return defaultAuthInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAppKey) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasAllowdUserIds) {
    return NO;
  }
  if (!self.hasAllowdGroupIds) {
    return NO;
  }
  if (!self.hasAuthInterfaces) {
    return NO;
  }
  if (!self.hasAuthIps) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAppKey) {
    [output writeString:1 value:self.appKey];
  }
  if (self.hasUserId) {
    [output writeUInt32:2 value:self.userId];
  }
  if (self.hasAllowdUserIds) {
    [output writeString:3 value:self.allowdUserIds];
  }
  if (self.hasAllowdGroupIds) {
    [output writeString:4 value:self.allowdGroupIds];
  }
  if (self.hasAuthInterfaces) {
    [output writeString:5 value:self.authInterfaces];
  }
  if (self.hasAuthIps) {
    [output writeString:6 value:self.authIps];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAppKey) {
    size_ += computeStringSize(1, self.appKey);
  }
  if (self.hasUserId) {
    size_ += computeUInt32Size(2, self.userId);
  }
  if (self.hasAllowdUserIds) {
    size_ += computeStringSize(3, self.allowdUserIds);
  }
  if (self.hasAllowdGroupIds) {
    size_ += computeStringSize(4, self.allowdGroupIds);
  }
  if (self.hasAuthInterfaces) {
    size_ += computeStringSize(5, self.authInterfaces);
  }
  if (self.hasAuthIps) {
    size_ += computeStringSize(6, self.authIps);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AuthInfo*) parseFromData:(NSData*) data {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromData:data] build];
}
+ (AuthInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthInfo*) parseFromInputStream:(NSInputStream*) input {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromInputStream:input] build];
}
+ (AuthInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromCodedInputStream:input] build];
}
+ (AuthInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthInfoBuilder*) builder {
  return [[AuthInfoBuilder alloc] init];
}
+ (AuthInfoBuilder*) builderWithPrototype:(AuthInfo*) prototype {
  return [[AuthInfo builder] mergeFrom:prototype];
}
- (AuthInfoBuilder*) builder {
  return [AuthInfo builder];
}
- (AuthInfoBuilder*) toBuilder {
  return [AuthInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAppKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appKey", self.appKey];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasAllowdUserIds) {
    [output appendFormat:@"%@%@: %@\n", indent, @"allowdUserIds", self.allowdUserIds];
  }
  if (self.hasAllowdGroupIds) {
    [output appendFormat:@"%@%@: %@\n", indent, @"allowdGroupIds", self.allowdGroupIds];
  }
  if (self.hasAuthInterfaces) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authInterfaces", self.authInterfaces];
  }
  if (self.hasAuthIps) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authIps", self.authIps];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AuthInfo class]]) {
    return NO;
  }
  AuthInfo *otherMessage = other;
  return
      self.hasAppKey == otherMessage.hasAppKey &&
      (!self.hasAppKey || [self.appKey isEqual:otherMessage.appKey]) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasAllowdUserIds == otherMessage.hasAllowdUserIds &&
      (!self.hasAllowdUserIds || [self.allowdUserIds isEqual:otherMessage.allowdUserIds]) &&
      self.hasAllowdGroupIds == otherMessage.hasAllowdGroupIds &&
      (!self.hasAllowdGroupIds || [self.allowdGroupIds isEqual:otherMessage.allowdGroupIds]) &&
      self.hasAuthInterfaces == otherMessage.hasAuthInterfaces &&
      (!self.hasAuthInterfaces || [self.authInterfaces isEqual:otherMessage.authInterfaces]) &&
      self.hasAuthIps == otherMessage.hasAuthIps &&
      (!self.hasAuthIps || [self.authIps isEqual:otherMessage.authIps]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAppKey) {
    hashCode = hashCode * 31 + [self.appKey hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasAllowdUserIds) {
    hashCode = hashCode * 31 + [self.allowdUserIds hash];
  }
  if (self.hasAllowdGroupIds) {
    hashCode = hashCode * 31 + [self.allowdGroupIds hash];
  }
  if (self.hasAuthInterfaces) {
    hashCode = hashCode * 31 + [self.authInterfaces hash];
  }
  if (self.hasAuthIps) {
    hashCode = hashCode * 31 + [self.authIps hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AuthInfoBuilder()
@property (strong) AuthInfo* result;
@end

@implementation AuthInfoBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[AuthInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AuthInfoBuilder*) clear {
  self.result = [[AuthInfo alloc] init];
  return self;
}
- (AuthInfoBuilder*) clone {
  return [AuthInfo builderWithPrototype:result];
}
- (AuthInfo*) defaultInstance {
  return [AuthInfo defaultInstance];
}
- (AuthInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthInfo*) buildPartial {
  AuthInfo* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AuthInfoBuilder*) mergeFrom:(AuthInfo*) other {
  if (other == [AuthInfo defaultInstance]) {
    return self;
  }
  if (other.hasAppKey) {
    [self setAppKey:other.appKey];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasAllowdUserIds) {
    [self setAllowdUserIds:other.allowdUserIds];
  }
  if (other.hasAllowdGroupIds) {
    [self setAllowdGroupIds:other.allowdGroupIds];
  }
  if (other.hasAuthInterfaces) {
    [self setAuthInterfaces:other.authInterfaces];
  }
  if (other.hasAuthIps) {
    [self setAuthIps:other.authIps];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AuthInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAppKey:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 26: {
        [self setAllowdUserIds:[input readString]];
        break;
      }
      case 34: {
        [self setAllowdGroupIds:[input readString]];
        break;
      }
      case 42: {
        [self setAuthInterfaces:[input readString]];
        break;
      }
      case 50: {
        [self setAuthIps:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAppKey {
  return result.hasAppKey;
}
- (NSString*) appKey {
  return result.appKey;
}
- (AuthInfoBuilder*) setAppKey:(NSString*) value {
  result.hasAppKey = YES;
  result.appKey = value;
  return self;
}
- (AuthInfoBuilder*) clearAppKey {
  result.hasAppKey = NO;
  result.appKey = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (UInt32) userId {
  return result.userId;
}
- (AuthInfoBuilder*) setUserId:(UInt32) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (AuthInfoBuilder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasAllowdUserIds {
  return result.hasAllowdUserIds;
}
- (NSString*) allowdUserIds {
  return result.allowdUserIds;
}
- (AuthInfoBuilder*) setAllowdUserIds:(NSString*) value {
  result.hasAllowdUserIds = YES;
  result.allowdUserIds = value;
  return self;
}
- (AuthInfoBuilder*) clearAllowdUserIds {
  result.hasAllowdUserIds = NO;
  result.allowdUserIds = @"";
  return self;
}
- (BOOL) hasAllowdGroupIds {
  return result.hasAllowdGroupIds;
}
- (NSString*) allowdGroupIds {
  return result.allowdGroupIds;
}
- (AuthInfoBuilder*) setAllowdGroupIds:(NSString*) value {
  result.hasAllowdGroupIds = YES;
  result.allowdGroupIds = value;
  return self;
}
- (AuthInfoBuilder*) clearAllowdGroupIds {
  result.hasAllowdGroupIds = NO;
  result.allowdGroupIds = @"";
  return self;
}
- (BOOL) hasAuthInterfaces {
  return result.hasAuthInterfaces;
}
- (NSString*) authInterfaces {
  return result.authInterfaces;
}
- (AuthInfoBuilder*) setAuthInterfaces:(NSString*) value {
  result.hasAuthInterfaces = YES;
  result.authInterfaces = value;
  return self;
}
- (AuthInfoBuilder*) clearAuthInterfaces {
  result.hasAuthInterfaces = NO;
  result.authInterfaces = @"";
  return self;
}
- (BOOL) hasAuthIps {
  return result.hasAuthIps;
}
- (NSString*) authIps {
  return result.authIps;
}
- (AuthInfoBuilder*) setAuthIps:(NSString*) value {
  result.hasAuthIps = YES;
  result.authIps = value;
  return self;
}
- (AuthInfoBuilder*) clearAuthIps {
  result.hasAuthIps = NO;
  result.authIps = @"";
  return self;
}
@end

@interface DepartInfo ()
@property UInt32 deptId;
@property UInt32 priority;
@property (strong) NSString* deptName;
@property UInt32 parentDeptId;
@property DepartmentStatusType deptStatus;
@end

@implementation DepartInfo

- (BOOL) hasDeptId {
  return !!hasDeptId_;
}
- (void) setHasDeptId:(BOOL) value_ {
  hasDeptId_ = !!value_;
}
@synthesize deptId;
- (BOOL) hasPriority {
  return !!hasPriority_;
}
- (void) setHasPriority:(BOOL) value_ {
  hasPriority_ = !!value_;
}
@synthesize priority;
- (BOOL) hasDeptName {
  return !!hasDeptName_;
}
- (void) setHasDeptName:(BOOL) value_ {
  hasDeptName_ = !!value_;
}
@synthesize deptName;
- (BOOL) hasParentDeptId {
  return !!hasParentDeptId_;
}
- (void) setHasParentDeptId:(BOOL) value_ {
  hasParentDeptId_ = !!value_;
}
@synthesize parentDeptId;
- (BOOL) hasDeptStatus {
  return !!hasDeptStatus_;
}
- (void) setHasDeptStatus:(BOOL) value_ {
  hasDeptStatus_ = !!value_;
}
@synthesize deptStatus;
- (void) dealloc {
  self.deptName = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.deptId = 0;
    self.priority = 0;
    self.deptName = @"";
    self.parentDeptId = 0;
    self.deptStatus = DepartmentStatusTypeDeptStatusOk;
  }
  return self;
}
static DepartInfo* defaultDepartInfoInstance = nil;
+ (void) initialize {
  if (self == [DepartInfo class]) {
    defaultDepartInfoInstance = [[DepartInfo alloc] init];
  }
}
+ (DepartInfo*) defaultInstance {
  return defaultDepartInfoInstance;
}
- (DepartInfo*) defaultInstance {
  return defaultDepartInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDeptId) {
    return NO;
  }
  if (!self.hasPriority) {
    return NO;
  }
  if (!self.hasDeptName) {
    return NO;
  }
  if (!self.hasParentDeptId) {
    return NO;
  }
  if (!self.hasDeptStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeptId) {
    [output writeUInt32:1 value:self.deptId];
  }
  if (self.hasPriority) {
    [output writeUInt32:2 value:self.priority];
  }
  if (self.hasDeptName) {
    [output writeString:3 value:self.deptName];
  }
  if (self.hasParentDeptId) {
    [output writeUInt32:4 value:self.parentDeptId];
  }
  if (self.hasDeptStatus) {
    [output writeEnum:5 value:self.deptStatus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDeptId) {
    size_ += computeUInt32Size(1, self.deptId);
  }
  if (self.hasPriority) {
    size_ += computeUInt32Size(2, self.priority);
  }
  if (self.hasDeptName) {
    size_ += computeStringSize(3, self.deptName);
  }
  if (self.hasParentDeptId) {
    size_ += computeUInt32Size(4, self.parentDeptId);
  }
  if (self.hasDeptStatus) {
    size_ += computeEnumSize(5, self.deptStatus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DepartInfo*) parseFromData:(NSData*) data {
  return (DepartInfo*)[[[DepartInfo builder] mergeFromData:data] build];
}
+ (DepartInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DepartInfo*)[[[DepartInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DepartInfo*) parseFromInputStream:(NSInputStream*) input {
  return (DepartInfo*)[[[DepartInfo builder] mergeFromInputStream:input] build];
}
+ (DepartInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DepartInfo*)[[[DepartInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DepartInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DepartInfo*)[[[DepartInfo builder] mergeFromCodedInputStream:input] build];
}
+ (DepartInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DepartInfo*)[[[DepartInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DepartInfoBuilder*) builder {
  return [[DepartInfoBuilder alloc] init];
}
+ (DepartInfoBuilder*) builderWithPrototype:(DepartInfo*) prototype {
  return [[DepartInfo builder] mergeFrom:prototype];
}
- (DepartInfoBuilder*) builder {
  return [DepartInfo builder];
}
- (DepartInfoBuilder*) toBuilder {
  return [DepartInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDeptId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deptId", [NSNumber numberWithInteger:self.deptId]];
  }
  if (self.hasPriority) {
    [output appendFormat:@"%@%@: %@\n", indent, @"priority", [NSNumber numberWithInteger:self.priority]];
  }
  if (self.hasDeptName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deptName", self.deptName];
  }
  if (self.hasParentDeptId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentDeptId", [NSNumber numberWithInteger:self.parentDeptId]];
  }
  if (self.hasDeptStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"deptStatus", self.deptStatus];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DepartInfo class]]) {
    return NO;
  }
  DepartInfo *otherMessage = other;
  return
      self.hasDeptId == otherMessage.hasDeptId &&
      (!self.hasDeptId || self.deptId == otherMessage.deptId) &&
      self.hasPriority == otherMessage.hasPriority &&
      (!self.hasPriority || self.priority == otherMessage.priority) &&
      self.hasDeptName == otherMessage.hasDeptName &&
      (!self.hasDeptName || [self.deptName isEqual:otherMessage.deptName]) &&
      self.hasParentDeptId == otherMessage.hasParentDeptId &&
      (!self.hasParentDeptId || self.parentDeptId == otherMessage.parentDeptId) &&
      self.hasDeptStatus == otherMessage.hasDeptStatus &&
      (!self.hasDeptStatus || self.deptStatus == otherMessage.deptStatus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDeptId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.deptId] hash];
  }
  if (self.hasPriority) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.priority] hash];
  }
  if (self.hasDeptName) {
    hashCode = hashCode * 31 + [self.deptName hash];
  }
  if (self.hasParentDeptId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.parentDeptId] hash];
  }
  if (self.hasDeptStatus) {
    hashCode = hashCode * 31 + self.deptStatus;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DepartInfoBuilder()
@property (strong) DepartInfo* result;
@end

@implementation DepartInfoBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[DepartInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DepartInfoBuilder*) clear {
  self.result = [[DepartInfo alloc] init];
  return self;
}
- (DepartInfoBuilder*) clone {
  return [DepartInfo builderWithPrototype:result];
}
- (DepartInfo*) defaultInstance {
  return [DepartInfo defaultInstance];
}
- (DepartInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DepartInfo*) buildPartial {
  DepartInfo* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (DepartInfoBuilder*) mergeFrom:(DepartInfo*) other {
  if (other == [DepartInfo defaultInstance]) {
    return self;
  }
  if (other.hasDeptId) {
    [self setDeptId:other.deptId];
  }
  if (other.hasPriority) {
    [self setPriority:other.priority];
  }
  if (other.hasDeptName) {
    [self setDeptName:other.deptName];
  }
  if (other.hasParentDeptId) {
    [self setParentDeptId:other.parentDeptId];
  }
  if (other.hasDeptStatus) {
    [self setDeptStatus:other.deptStatus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DepartInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DepartInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDeptId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setPriority:[input readUInt32]];
        break;
      }
      case 26: {
        [self setDeptName:[input readString]];
        break;
      }
      case 32: {
        [self setParentDeptId:[input readUInt32]];
        break;
      }
      case 40: {
        DepartmentStatusType value = (DepartmentStatusType)[input readEnum];
        if (DepartmentStatusTypeIsValidValue(value)) {
          [self setDeptStatus:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasDeptId {
  return result.hasDeptId;
}
- (UInt32) deptId {
  return result.deptId;
}
- (DepartInfoBuilder*) setDeptId:(UInt32) value {
  result.hasDeptId = YES;
  result.deptId = value;
  return self;
}
- (DepartInfoBuilder*) clearDeptId {
  result.hasDeptId = NO;
  result.deptId = 0;
  return self;
}
- (BOOL) hasPriority {
  return result.hasPriority;
}
- (UInt32) priority {
  return result.priority;
}
- (DepartInfoBuilder*) setPriority:(UInt32) value {
  result.hasPriority = YES;
  result.priority = value;
  return self;
}
- (DepartInfoBuilder*) clearPriority {
  result.hasPriority = NO;
  result.priority = 0;
  return self;
}
- (BOOL) hasDeptName {
  return result.hasDeptName;
}
- (NSString*) deptName {
  return result.deptName;
}
- (DepartInfoBuilder*) setDeptName:(NSString*) value {
  result.hasDeptName = YES;
  result.deptName = value;
  return self;
}
- (DepartInfoBuilder*) clearDeptName {
  result.hasDeptName = NO;
  result.deptName = @"";
  return self;
}
- (BOOL) hasParentDeptId {
  return result.hasParentDeptId;
}
- (UInt32) parentDeptId {
  return result.parentDeptId;
}
- (DepartInfoBuilder*) setParentDeptId:(UInt32) value {
  result.hasParentDeptId = YES;
  result.parentDeptId = value;
  return self;
}
- (DepartInfoBuilder*) clearParentDeptId {
  result.hasParentDeptId = NO;
  result.parentDeptId = 0;
  return self;
}
- (BOOL) hasDeptStatus {
  return result.hasDeptStatus;
}
- (DepartmentStatusType) deptStatus {
  return result.deptStatus;
}
- (DepartInfoBuilder*) setDeptStatus:(DepartmentStatusType) value {
  result.hasDeptStatus = YES;
  result.deptStatus = value;
  return self;
}
- (DepartInfoBuilder*) clearDeptStatus {
  result.hasDeptStatus = NO;
  result.deptStatus = DepartmentStatusTypeDeptStatusOk;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
